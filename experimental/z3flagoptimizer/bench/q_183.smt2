(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-option :AUTO_CONFIG false)
(set-option :MODEL.V2 true)
(set-option :TYPE_CHECK true)
(set-option :TIMEOUT 120000)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun _virtual_address_space_low () (_ BitVec 64))
(declare-fun _virtual_address_space_high () (_ BitVec 64))
(declare-fun _stack_low () (_ BitVec 64))
(declare-fun _stack_high () (_ BitVec 64))
(declare-fun _bitmap_low () (_ BitVec 64))
(declare-fun _bitmap_high () (_ BitVec 64))
(declare-fun T_fresh_0 ((_ BitVec 64)) Bool)
(declare-sort |T@[(_ BitVec 64)](_ BitVec 8)| 0)
(declare-fun REP_STOSB (|T@[(_ BitVec 64)](_ BitVec 8)| (_ BitVec 64) (_ BitVec 64) (_ BitVec 8)) |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun |Select_[$bv64]$bv8| (|T@[(_ BitVec 64)](_ BitVec 8)| (_ BitVec 64)) (_ BitVec 8))
(declare-fun _guard_writeTable_ptr () (_ BitVec 64))
(declare-fun _guard_callTable_ptr () (_ BitVec 64))
(declare-fun _function_addr_low () (_ BitVec 64))
(declare-fun _function_addr_high () (_ BitVec 64))
(declare-fun T ((_ BitVec 64)) Bool)
(declare-fun policy ((_ BitVec 64)) Bool)
(declare-fun %lbl%+12126 () Bool)
(declare-fun %lbl%+12114 () Bool)
(declare-fun %lbl%+12090 () Bool)
(declare-fun %lbl%+12080 () Bool)
(declare-fun %lbl%+12072 () Bool)
(declare-fun %lbl%+12143 () Bool)
(declare-fun %lbl%+12125 () Bool)
(declare-fun CF@21 () (_ BitVec 1))
(declare-fun t_159@0 () (_ BitVec 32))
(declare-fun fresh_0 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RSP@3 () (_ BitVec 64))
(declare-fun R15@0 () (_ BitVec 64))
(declare-fun CF@22 () (_ BitVec 1))
(declare-fun OF@20 () (_ BitVec 1))
(declare-fun AF@20 () (_ BitVec 1))
(declare-fun PF@34 () (_ BitVec 1))
(declare-fun SF@34 () (_ BitVec 1))
(declare-fun ZF@34 () (_ BitVec 1))
(declare-fun RAX@26 () (_ BitVec 64))
(declare-fun mem@4 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun |Store_[$bv64]$bv8| (|T@[(_ BitVec 64)](_ BitVec 8)| (_ BitVec 64) (_ BitVec 8)) |T@[(_ BitVec 64)](_ BitVec 8)|)
(assert (forall ( ( ?x0 |T@[(_ BitVec 64)](_ BitVec 8)|) ( ?x1 (_ BitVec 64)) ( ?x2 (_ BitVec 8))) (= (|Select_[$bv64]$bv8| (|Store_[$bv64]$bv8| ?x0 ?x1 ?x2) ?x1)  ?x2)))
(assert (forall ( ( ?x0 |T@[(_ BitVec 64)](_ BitVec 8)|) ( ?x1 (_ BitVec 64)) ( ?y1 (_ BitVec 64)) ( ?x2 (_ BitVec 8))) (=>  (not (= ?x1 ?y1)) (= (|Select_[$bv64]$bv8| (|Store_[$bv64]$bv8| ?x0 ?x1 ?x2) ?y1) (|Select_[$bv64]$bv8| ?x0 ?y1)))))
(declare-fun RDX () (_ BitVec 64))
(declare-fun R8 () (_ BitVec 64))
(declare-fun mem_stack@20 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RCX@13 () (_ BitVec 64))
(declare-fun R15@1 () (_ BitVec 64))
(declare-fun RDX@6 () (_ BitVec 64))
(declare-fun origCOUNT_164@0 () (_ BitVec 64))
(declare-fun RAX@27 () (_ BitVec 64))
(declare-fun CF@23 () (_ BitVec 1))
(declare-fun OF@21 () (_ BitVec 1))
(declare-fun unconstrained_53 () (_ BitVec 1))
(declare-fun SF@35 () (_ BitVec 1))
(declare-fun ZF@35 () (_ BitVec 1))
(declare-fun PF@35 () (_ BitVec 1))
(declare-fun AF@21 () (_ BitVec 1))
(declare-fun unconstrained_54 () (_ BitVec 1))
(declare-fun RBX@3 () (_ BitVec 64))
(declare-fun RBX@0 () (_ BitVec 64))
(declare-fun CF@24 () (_ BitVec 1))
(declare-fun OF@22 () (_ BitVec 1))
(declare-fun AF@22 () (_ BitVec 1))
(declare-fun PF@36 () (_ BitVec 1))
(declare-fun SF@36 () (_ BitVec 1))
(declare-fun ZF@36 () (_ BitVec 1))
(declare-fun origCOUNT_176@0 () (_ BitVec 64))
(declare-fun RCX@14 () (_ BitVec 64))
(declare-fun CF@25 () (_ BitVec 1))
(declare-fun OF@23 () (_ BitVec 1))
(declare-fun unconstrained_55 () (_ BitVec 1))
(declare-fun SF@37 () (_ BitVec 1))
(declare-fun ZF@37 () (_ BitVec 1))
(declare-fun PF@37 () (_ BitVec 1))
(declare-fun AF@23 () (_ BitVec 1))
(declare-fun unconstrained_56 () (_ BitVec 1))
(declare-fun RCX@15 () (_ BitVec 64))
(declare-fun PF@38 () (_ BitVec 1))
(declare-fun SF@38 () (_ BitVec 1))
(declare-fun ZF@38 () (_ BitVec 1))
(declare-fun origDEST_183@0 () (_ BitVec 8))
(declare-fun origCOUNT_184@0 () (_ BitVec 8))
(declare-fun RDX@7 () (_ BitVec 64))
(declare-fun CF@26 () (_ BitVec 1))
(declare-fun OF@24 () (_ BitVec 1))
(declare-fun unconstrained_58 () (_ BitVec 1))
(declare-fun SF@39 () (_ BitVec 1))
(declare-fun ZF@39 () (_ BitVec 1))
(declare-fun PF@39 () (_ BitVec 1))
(declare-fun AF@24 () (_ BitVec 1))
(declare-fun unconstrained_57 () (_ BitVec 1))
(declare-fun unconstrained_59 () (_ BitVec 1))
(declare-fun mem@5 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_bitmap@0 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@21 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_bitmap@5 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun PF@40 () (_ BitVec 1))
(declare-fun SF@40 () (_ BitVec 1))
(declare-fun ZF@40 () (_ BitVec 1))
(declare-fun RAX@28 () (_ BitVec 64))
(declare-fun mem@6 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@22 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_bitmap@6 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RAX@29 () (_ BitVec 64))
(declare-fun %lbl%+12113 () Bool)
(declare-fun ZF@18 () (_ BitVec 1))
(declare-fun RAX@20 () (_ BitVec 64))
(declare-fun RAX@21 () (_ BitVec 64))
(declare-fun CF@17 () (_ BitVec 1))
(declare-fun OF@16 () (_ BitVec 1))
(declare-fun AF@16 () (_ BitVec 1))
(declare-fun PF@30 () (_ BitVec 1))
(declare-fun SF@30 () (_ BitVec 1))
(declare-fun ZF@30 () (_ BitVec 1))
(declare-fun origCOUNT_142@0 () (_ BitVec 64))
(declare-fun RAX@22 () (_ BitVec 64))
(declare-fun CF@18 () (_ BitVec 1))
(declare-fun OF@17 () (_ BitVec 1))
(declare-fun unconstrained_45 () (_ BitVec 1))
(declare-fun SF@31 () (_ BitVec 1))
(declare-fun ZF@31 () (_ BitVec 1))
(declare-fun PF@31 () (_ BitVec 1))
(declare-fun AF@17 () (_ BitVec 1))
(declare-fun unconstrained_46 () (_ BitVec 1))
(declare-fun RCX@12 () (_ BitVec 64))
(declare-fun RAX@23 () (_ BitVec 64))
(declare-fun RAX@24 () (_ BitVec 64))
(declare-fun CF@19 () (_ BitVec 1))
(declare-fun OF@18 () (_ BitVec 1))
(declare-fun AF@18 () (_ BitVec 1))
(declare-fun PF@32 () (_ BitVec 1))
(declare-fun SF@32 () (_ BitVec 1))
(declare-fun ZF@32 () (_ BitVec 1))
(declare-fun origCOUNT_154@0 () (_ BitVec 64))
(declare-fun RAX@25 () (_ BitVec 64))
(declare-fun CF@20 () (_ BitVec 1))
(declare-fun OF@19 () (_ BitVec 1))
(declare-fun unconstrained_47 () (_ BitVec 1))
(declare-fun SF@33 () (_ BitVec 1))
(declare-fun ZF@33 () (_ BitVec 1))
(declare-fun PF@33 () (_ BitVec 1))
(declare-fun AF@19 () (_ BitVec 1))
(declare-fun unconstrained_48 () (_ BitVec 1))
(declare-fun %lbl%+12068 () Bool)
(declare-fun SF@15 () (_ BitVec 1))
(declare-fun RAX@8 () (_ BitVec 64))
(declare-fun RAX@9 () (_ BitVec 64))
(declare-fun CF@8 () (_ BitVec 1))
(declare-fun OF@8 () (_ BitVec 1))
(declare-fun AF@8 () (_ BitVec 1))
(declare-fun PF@16 () (_ BitVec 1))
(declare-fun SF@16 () (_ BitVec 1))
(declare-fun ZF@16 () (_ BitVec 1))
(declare-fun RAX@10 () (_ BitVec 64))
(declare-fun PF@17 () (_ BitVec 1))
(declare-fun SF@17 () (_ BitVec 1))
(declare-fun ZF@17 () (_ BitVec 1))
(declare-fun RAX@11 () (_ BitVec 64))
(declare-fun PF@18 () (_ BitVec 1))
(declare-fun SF@18 () (_ BitVec 1))
(declare-fun %lbl%+12089 () Bool)
(declare-fun CF@12 () (_ BitVec 1))
(declare-fun mem@1 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RDX@3 () (_ BitVec 64))
(declare-fun mem_stack@17 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RAX@16 () (_ BitVec 64))
(declare-fun RDX@4 () (_ BitVec 64))
(declare-fun origCOUNT_98@0 () (_ BitVec 64))
(declare-fun RAX@17 () (_ BitVec 64))
(declare-fun CF@13 () (_ BitVec 1))
(declare-fun OF@12 () (_ BitVec 1))
(declare-fun unconstrained_30 () (_ BitVec 1))
(declare-fun unconstrained_34 () (_ BitVec 1))
(declare-fun SF@24 () (_ BitVec 1))
(declare-fun unconstrained_31 () (_ BitVec 1))
(declare-fun ZF@24 () (_ BitVec 1))
(declare-fun ZF@23 () (_ BitVec 1))
(declare-fun PF@24 () (_ BitVec 1))
(declare-fun unconstrained_33 () (_ BitVec 1))
(declare-fun AF@12 () (_ BitVec 1))
(declare-fun unconstrained_32 () (_ BitVec 1))
(declare-fun unconstrained_35 () (_ BitVec 1))
(declare-fun RCX@9 () (_ BitVec 64))
(declare-fun RBX@2 () (_ BitVec 64))
(declare-fun CF@14 () (_ BitVec 1))
(declare-fun OF@13 () (_ BitVec 1))
(declare-fun AF@13 () (_ BitVec 1))
(declare-fun PF@25 () (_ BitVec 1))
(declare-fun SF@25 () (_ BitVec 1))
(declare-fun ZF@25 () (_ BitVec 1))
(declare-fun origCOUNT_110@0 () (_ BitVec 64))
(declare-fun RCX@10 () (_ BitVec 64))
(declare-fun CF@15 () (_ BitVec 1))
(declare-fun OF@14 () (_ BitVec 1))
(declare-fun unconstrained_36 () (_ BitVec 1))
(declare-fun SF@26 () (_ BitVec 1))
(declare-fun ZF@26 () (_ BitVec 1))
(declare-fun PF@26 () (_ BitVec 1))
(declare-fun AF@14 () (_ BitVec 1))
(declare-fun unconstrained_37 () (_ BitVec 1))
(declare-fun RCX@11 () (_ BitVec 64))
(declare-fun PF@27 () (_ BitVec 1))
(declare-fun SF@27 () (_ BitVec 1))
(declare-fun ZF@27 () (_ BitVec 1))
(declare-fun origDEST_117@0 () (_ BitVec 8))
(declare-fun origCOUNT_118@0 () (_ BitVec 8))
(declare-fun RDX@5 () (_ BitVec 64))
(declare-fun CF@16 () (_ BitVec 1))
(declare-fun OF@15 () (_ BitVec 1))
(declare-fun unconstrained_39 () (_ BitVec 1))
(declare-fun SF@28 () (_ BitVec 1))
(declare-fun ZF@28 () (_ BitVec 1))
(declare-fun PF@28 () (_ BitVec 1))
(declare-fun AF@15 () (_ BitVec 1))
(declare-fun unconstrained_38 () (_ BitVec 1))
(declare-fun unconstrained_40 () (_ BitVec 1))
(declare-fun %lbl%@23403 () Bool)
(declare-fun RSP () (_ BitVec 64))
(declare-fun mem@2 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@18 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_bitmap@3 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun PF@29 () (_ BitVec 1))
(declare-fun SF@29 () (_ BitVec 1))
(declare-fun ZF@29 () (_ BitVec 1))
(declare-fun RAX@18 () (_ BitVec 64))
(declare-fun mem@3 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@19 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_bitmap@4 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RAX@19 () (_ BitVec 64))
(declare-fun R8@2 () (_ BitVec 64))
(declare-fun %lbl%+12079 () Bool)
(declare-fun ZF@21 () (_ BitVec 1))
(declare-fun origCOUNT_86@0 () (_ BitVec 64))
(declare-fun RAX@14 () (_ BitVec 64))
(declare-fun CF@10 () (_ BitVec 1))
(declare-fun OF@10 () (_ BitVec 1))
(declare-fun unconstrained_26 () (_ BitVec 1))
(declare-fun SF@22 () (_ BitVec 1))
(declare-fun SF@21 () (_ BitVec 1))
(declare-fun ZF@22 () (_ BitVec 1))
(declare-fun PF@22 () (_ BitVec 1))
(declare-fun PF@21 () (_ BitVec 1))
(declare-fun AF@10 () (_ BitVec 1))
(declare-fun unconstrained_25 () (_ BitVec 1))
(declare-fun unconstrained_27 () (_ BitVec 1))
(declare-fun RCX@8 () (_ BitVec 64))
(declare-fun origCOUNT_92@0 () (_ BitVec 64))
(declare-fun RAX@15 () (_ BitVec 64))
(declare-fun CF@11 () (_ BitVec 1))
(declare-fun OF@11 () (_ BitVec 1))
(declare-fun unconstrained_28 () (_ BitVec 1))
(declare-fun SF@23 () (_ BitVec 1))
(declare-fun PF@23 () (_ BitVec 1))
(declare-fun AF@11 () (_ BitVec 1))
(declare-fun unconstrained_29 () (_ BitVec 1))
(declare-fun %lbl%+12073 () Bool)
(declare-fun SF@19 () (_ BitVec 1))
(declare-fun RAX@12 () (_ BitVec 64))
(declare-fun PF@20 () (_ BitVec 1))
(declare-fun SF@20 () (_ BitVec 1))
(declare-fun ZF@20 () (_ BitVec 1))
(declare-fun RAX@13 () (_ BitVec 64))
(declare-fun %lbl%+12069 () Bool)
(declare-fun t_77@0 () (_ BitVec 32))
(declare-fun CF@9 () (_ BitVec 1))
(declare-fun OF@9 () (_ BitVec 1))
(declare-fun AF@9 () (_ BitVec 1))
(declare-fun PF@19 () (_ BitVec 1))
(declare-fun ZF@19 () (_ BitVec 1))
(declare-fun %lbl%+12053 () Bool)
(declare-fun ZF@7 () (_ BitVec 1))
(declare-fun mem_stack@13 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@11 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@14 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@15 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@16 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RCX () (_ BitVec 64))
(declare-fun R9@0 () (_ BitVec 64))
(declare-fun RCX@6 () (_ BitVec 64))
(declare-fun R8@0 () (_ BitVec 64))
(declare-fun RAX@7 () (_ BitVec 64))
(declare-fun t_73@0 () (_ BitVec 32))
(declare-fun PF@15 () (_ BitVec 1))
(declare-fun ZF@15 () (_ BitVec 1))
(declare-fun %lbl%+12037 () Bool)
(declare-fun RAX@3 () (_ BitVec 64))
(declare-fun RDX@0 () (_ BitVec 64))
(declare-fun origCOUNT_38@0 () (_ BitVec 64))
(declare-fun RAX@4 () (_ BitVec 64))
(declare-fun CF@4 () (_ BitVec 1))
(declare-fun CF () (_ BitVec 1))
(declare-fun OF@4 () (_ BitVec 1))
(declare-fun OF () (_ BitVec 1))
(declare-fun unconstrained_12 () (_ BitVec 1))
(declare-fun SF@8 () (_ BitVec 1))
(declare-fun SF () (_ BitVec 1))
(declare-fun ZF@8 () (_ BitVec 1))
(declare-fun ZF () (_ BitVec 1))
(declare-fun PF@8 () (_ BitVec 1))
(declare-fun PF () (_ BitVec 1))
(declare-fun AF@4 () (_ BitVec 1))
(declare-fun AF () (_ BitVec 1))
(declare-fun unconstrained_13 () (_ BitVec 1))
(declare-fun RCX@3 () (_ BitVec 64))
(declare-fun RBX@1 () (_ BitVec 64))
(declare-fun CF@5 () (_ BitVec 1))
(declare-fun OF@5 () (_ BitVec 1))
(declare-fun AF@5 () (_ BitVec 1))
(declare-fun PF@9 () (_ BitVec 1))
(declare-fun SF@9 () (_ BitVec 1))
(declare-fun ZF@9 () (_ BitVec 1))
(declare-fun origCOUNT_50@0 () (_ BitVec 64))
(declare-fun RCX@4 () (_ BitVec 64))
(declare-fun CF@6 () (_ BitVec 1))
(declare-fun OF@6 () (_ BitVec 1))
(declare-fun unconstrained_14 () (_ BitVec 1))
(declare-fun SF@10 () (_ BitVec 1))
(declare-fun ZF@10 () (_ BitVec 1))
(declare-fun PF@10 () (_ BitVec 1))
(declare-fun AF@6 () (_ BitVec 1))
(declare-fun unconstrained_15 () (_ BitVec 1))
(declare-fun RCX@5 () (_ BitVec 64))
(declare-fun PF@11 () (_ BitVec 1))
(declare-fun SF@11 () (_ BitVec 1))
(declare-fun ZF@11 () (_ BitVec 1))
(declare-fun RAX@5 () (_ BitVec 64))
(declare-fun origDEST_57@0 () (_ BitVec 8))
(declare-fun origCOUNT_58@0 () (_ BitVec 8))
(declare-fun RDX@1 () (_ BitVec 64))
(declare-fun CF@7 () (_ BitVec 1))
(declare-fun OF@7 () (_ BitVec 1))
(declare-fun unconstrained_18 () (_ BitVec 1))
(declare-fun SF@12 () (_ BitVec 1))
(declare-fun ZF@12 () (_ BitVec 1))
(declare-fun PF@12 () (_ BitVec 1))
(declare-fun AF@7 () (_ BitVec 1))
(declare-fun unconstrained_17 () (_ BitVec 1))
(declare-fun unconstrained_19 () (_ BitVec 1))
(declare-fun mem_bitmap@1 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun PF@13 () (_ BitVec 1))
(declare-fun mem@@0 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun SF@13 () (_ BitVec 1))
(declare-fun ZF@13 () (_ BitVec 1))
(declare-fun mem@0 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@12 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_bitmap@2 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RAX@6 () (_ BitVec 64))
(declare-fun PF@14 () (_ BitVec 1))
(declare-fun SF@14 () (_ BitVec 1))
(declare-fun ZF@14 () (_ BitVec 1))
(declare-fun %lbl%+12052 () Bool)
(declare-fun %lbl%+12035 () Bool)
(declare-fun ZF@6 () (_ BitVec 1))
(declare-fun t_67@0 () (_ BitVec 64))
(declare-fun PF@7 () (_ BitVec 1))
(declare-fun SF@7 () (_ BitVec 1))
(declare-fun %lbl%+12036 () Bool)
(declare-fun %lbl%+12005 () Bool)
(declare-fun mem_stack@0 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RBX () (_ BitVec 64))
(declare-fun mem_stack@1 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RBP () (_ BitVec 64))
(declare-fun mem_stack@2 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RSI () (_ BitVec 64))
(declare-fun RSP@0 () (_ BitVec 64))
(declare-fun mem_stack@3 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun RDI () (_ BitVec 64))
(declare-fun RSP@1 () (_ BitVec 64))
(declare-fun mem_stack@4 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun R14 () (_ BitVec 64))
(declare-fun RSP@2 () (_ BitVec 64))
(declare-fun mem_stack@5 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun R15 () (_ BitVec 64))
(declare-fun CF@0 () (_ BitVec 1))
(declare-fun OF@0 () (_ BitVec 1))
(declare-fun AF@0 () (_ BitVec 1))
(declare-fun PF@0 () (_ BitVec 1))
(declare-fun SF@0 () (_ BitVec 1))
(declare-fun ZF@0 () (_ BitVec 1))
(declare-fun mem_bitmap () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun R10@0 () (_ BitVec 64))
(declare-fun origCOUNT_12@0 () (_ BitVec 64))
(declare-fun R10@1 () (_ BitVec 64))
(declare-fun CF@1 () (_ BitVec 1))
(declare-fun OF@1 () (_ BitVec 1))
(declare-fun unconstrained_1 () (_ BitVec 1))
(declare-fun SF@1 () (_ BitVec 1))
(declare-fun ZF@1 () (_ BitVec 1))
(declare-fun PF@1 () (_ BitVec 1))
(declare-fun AF@1 () (_ BitVec 1))
(declare-fun unconstrained_2 () (_ BitVec 1))
(declare-fun RCX@0 () (_ BitVec 64))
(declare-fun origCOUNT_18@0 () (_ BitVec 64))
(declare-fun RCX@1 () (_ BitVec 64))
(declare-fun CF@2 () (_ BitVec 1))
(declare-fun OF@2 () (_ BitVec 1))
(declare-fun unconstrained_4 () (_ BitVec 1))
(declare-fun SF@2 () (_ BitVec 1))
(declare-fun ZF@2 () (_ BitVec 1))
(declare-fun PF@2 () (_ BitVec 1))
(declare-fun AF@2 () (_ BitVec 1))
(declare-fun unconstrained_3 () (_ BitVec 1))
(declare-fun unconstrained_5 () (_ BitVec 1))
(declare-fun RAX@0 () (_ BitVec 64))
(declare-fun RCX@2 () (_ BitVec 64))
(declare-fun PF@3 () (_ BitVec 1))
(declare-fun SF@3 () (_ BitVec 1))
(declare-fun ZF@3 () (_ BitVec 1))
(declare-fun origCOUNT_26@0 () (_ BitVec 64))
(declare-fun RAX@1 () (_ BitVec 64))
(declare-fun CF@3 () (_ BitVec 1))
(declare-fun OF@3 () (_ BitVec 1))
(declare-fun unconstrained_7 () (_ BitVec 1))
(declare-fun SF@4 () (_ BitVec 1))
(declare-fun ZF@4 () (_ BitVec 1))
(declare-fun PF@4 () (_ BitVec 1))
(declare-fun AF@3 () (_ BitVec 1))
(declare-fun unconstrained_6 () (_ BitVec 1))
(declare-fun unconstrained_8 () (_ BitVec 1))
(declare-fun PF@5 () (_ BitVec 1))
(declare-fun SF@5 () (_ BitVec 1))
(declare-fun ZF@5 () (_ BitVec 1))
(declare-fun RAX@2 () (_ BitVec 64))
(declare-fun mem_stack@6 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@7 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@8 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@9 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun mem_stack@10 () |T@[(_ BitVec 64)](_ BitVec 8)|)
(declare-fun t_33@0 () (_ BitVec 64))
(declare-fun R9 () (_ BitVec 64))
(declare-fun PF@6 () (_ BitVec 1))
(declare-fun SF@6 () (_ BitVec 1))
(declare-fun %lbl%+14718 () Bool)
(assert (= _virtual_address_space_low #x0000000000000000))
(assert (= _virtual_address_space_high #x0000000040000000))
(assert (= _stack_low #x0000000020000000))
(assert (= _stack_high #x0000000020100000))
(assert (= _bitmap_low #x0000000040001000))
(assert (= _bitmap_high #x0000000041001000))
(assert (forall ((i (_ BitVec 64)) ) (!  (and (=> (T_fresh_0 i) true) (=> true (T_fresh_0 i)))
 :qid |split183.9:15|
 :skolemid |0|
 :pattern ( (T_fresh_0 i))
)))
(assert (forall ((mem |T@[(_ BitVec 64)](_ BitVec 8)|) (rcx (_ BitVec 64)) (rdi (_ BitVec 64)) (al (_ BitVec 8)) ) (! (forall ((i@@0 (_ BitVec 64)) ) (!  (and (=> (and (bvuge i@@0 rdi) (bvult i@@0 (bvadd rdi rcx))) (= (|Select_[$bv64]$bv8| (REP_STOSB mem rcx rdi al) i@@0) al)) (=> (or (bvult i@@0 rdi) (bvuge i@@0 (bvadd rdi rcx))) (= (|Select_[$bv64]$bv8| (REP_STOSB mem rcx rdi al) i@@0) (|Select_[$bv64]$bv8| mem i@@0))))
 :qid |split183.135:101|
 :skolemid |1|
))
 :qid |split183.135:15|
 :skolemid |2|
 :pattern ( (REP_STOSB mem rcx rdi al))
)))
(assert (= _guard_writeTable_ptr #x00000000000061a0))
(assert (= _guard_callTable_ptr #x00000000000061b0))
(assert (= _function_addr_low #x0000000000002a70))
(assert (= _function_addr_high #x0000000000002c54))
(assert (forall ((i@@1 (_ BitVec 64)) ) (!  (and (=> (T i@@1) true) (=> true (T i@@1)))
 :qid |split183.219:15|
 :skolemid |3|
 :pattern ( (T i@@1))
)))
(assert (policy #x0000000000001000))
(assert (policy #x0000000000001090))
(assert (policy #x0000000000001140))
(assert (policy #x00000000000011c0))
(assert (policy #x0000000000001280))
(assert (policy #x00000000000012b0))
(assert (policy #x0000000000001310))
(assert (policy #x0000000000001370))
(assert (policy #x00000000000013d0))
(assert (policy #x0000000000001430))
(assert (policy #x0000000000001460))
(assert (policy #x00000000000014b0))
(assert (policy #x0000000000001650))
(assert (policy #x00000000000016e0))
(assert (policy #x00000000000016f0))
(assert (policy #x0000000000001780))
(assert (policy #x00000000000017a0))
(assert (policy #x00000000000019f0))
(assert (policy #x0000000000001a90))
(assert (policy #x0000000000001ac0))
(assert (policy #x0000000000001b30))
(assert (policy #x0000000000001d00))
(assert (policy #x0000000000001df0))
(assert (policy #x0000000000001e90))
(assert (policy #x0000000000001f90))
(assert (policy #x0000000000002280))
(assert (policy #x00000000000016d0))
(assert (policy #x0000000000002190))
(assert (policy #x00000000000021a0))
(assert (policy #x0000000000002210))
(assert (policy #x00000000000027c0))
(assert (policy #x0000000000002290))
(assert (policy #x00000000000023e0))
(assert (policy #x0000000000002410))
(assert (policy #x0000000000002420))
(assert (policy #x0000000000002430))
(assert (policy #x0000000000002440))
(assert (policy #x0000000000002450))
(assert (policy #x0000000000002460))
(assert (policy #x00000000000024c0))
(assert (policy #x0000000000002650))
(assert (policy #x0000000000002760))
(assert (policy #x00000000000027d0))
(assert (policy #x0000000000002830))
(assert (policy #x0000000000002a70))
(assert (policy #x0000000000002c60))
(assert (policy #x0000000000002d00))
(assert (policy #x0000000000002d10))
(assert (policy #x0000000000002fe0))
(assert (policy #x00000000000033a0))
(assert (policy #x0000000000003da0))
(assert (policy #x0000000000003f20))
(assert (policy #x0000000000004090))
(assert (policy #x0000000000004400))
(assert (policy #x0000000000004450))
(assert (policy #x0000000000004520))
(assert (policy #x0000000000004570))
(assert (policy #x0000000000004580))
(assert (policy #x0000000000004590))
(assert (policy #x0000000000004660))
(assert (policy #x0000000000004670))
(assert (policy #x0000000000004680))
(assert (policy #x0000000000004720))
(assert (policy #x00000000000032d0))
(assert (policy #x0000000000003000))
(assert (policy #x0000000000002db0))
(assert (policy #x00000000000043f6))
(assert (policy #x00000000000043f0))
(push 1)
(set-info :boogie-vc-id dll_func)
(assert (not
(let ((anon15_Else_correct  (=> (! (and %lbl%+12126 true) :lblpos +12126) true)))
(let ((anon14_Else_correct  (=> (! (and %lbl%+12114 true) :lblpos +12114) true)))
(let ((anon13_Else_correct  (=> (! (and %lbl%+12090 true) :lblpos +12090) true)))
(let ((anon12_Else_correct  (=> (! (and %lbl%+12080 true) :lblpos +12080) true)))
(let ((anon11_Then_correct  (=> (! (and %lbl%+12072 true) :lblpos +12072) true)))
(let ((label_0x2c37_correct  (=> (! (and %lbl%+12143 true) :lblpos +12143) true)))
(let ((anon15_Then_correct  (=> (! (and %lbl%+12125 true) :lblpos +12125) (=> (ite (= CF@21 #b0) false true) (=> (and (and (= t_159@0 (bvsub (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) ((_ extract 31 0) R15@0))) (= CF@22 (ite  (not (bvult (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) ((_ extract 31 0) R15@0))) #b0 #b1))) (and (= OF@20 ((_ extract 31 31) (bvand (bvxor (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) ((_ extract 31 0) R15@0)) (bvxor (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) t_159@0)))) (= AF@20 (ite  (not (= #x00000010 (bvand #x00000010 (bvxor (bvxor t_159@0 (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038))))) ((_ extract 31 0) R15@0))))) #b0 #b1)))) (=> (and (and (and (= PF@34 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr t_159@0 #x00000004) t_159@0) #x00000002) (bvxor (bvlshr t_159@0 #x00000004) t_159@0)) #x00000001) (bvxor (bvlshr (bvxor (bvlshr t_159@0 #x00000004) t_159@0) #x00000002) (bvxor (bvlshr t_159@0 #x00000004) t_159@0)))))) (= SF@34 ((_ extract 31 31) t_159@0))) (and (= ZF@34 (ite  (not (= #x00000000 t_159@0)) #b0 #b1)) (= RAX@26 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000060))))) (and (and (= mem@4 (|Store_[$bv64]$bv8| fresh_0 (bvadd (bvadd RDX R8) (concat #xffffffff #xffffffff)) ((_ extract 7 0) ((_ extract 31 0) R15@0)))) (= mem_stack@20 (ite  (and (bvuge (bvadd (bvadd RDX R8) (concat #xffffffff #xffffffff)) _stack_low) (bvult (bvadd (bvadd RDX R8) (concat #xffffffff #xffffffff)) _stack_high)) (|Store_[$bv64]$bv8| fresh_0 (bvadd (bvadd RDX R8) (concat #xffffffff #xffffffff)) ((_ extract 7 0) ((_ extract 31 0) R15@0))) fresh_0))) (and (= RCX@13 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000060))) (= R15@1 (concat ((_ extract 63 8) R15@0) (concat #b0000000 (bvnot (bvxor SF@34 OF@20)))))))) (=> (and (and (and (and (= RDX@6 (concat #x00000000 #x000000fe)) (= origCOUNT_164@0 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001)))) (and (= RAX@27 (bvlshr RAX@26 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@23 (ite (ite (= (ite  (not (= origCOUNT_164@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@22 ((_ extract 63 63) (bvshl RAX@26 (bvsub #x0000000000000040 origCOUNT_164@0))))))) (and (and (= OF@21 (ite (ite (= (ite  (not (= origCOUNT_164@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@20 (ite (ite (= (ite  (not (= origCOUNT_164@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RAX@26) unconstrained_53))) (= SF@35 (ite (ite (= (ite  (not (= origCOUNT_164@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@34 ((_ extract 63 63) RAX@27)))) (and (= ZF@35 (ite (ite (= (ite  (not (= origCOUNT_164@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@34 (ite  (not (= #x0000000000000000 RAX@27)) #b0 #b1))) (= PF@35 (ite (ite (= (ite  (not (= origCOUNT_164@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@34 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@27 #x0000000000000004) RAX@27) #x0000000000000002) (bvxor (bvlshr RAX@27 #x0000000000000004) RAX@27)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@27 #x0000000000000004) RAX@27) #x0000000000000002) (bvxor (bvlshr RAX@27 #x0000000000000004) RAX@27)))))))))) (and (and (and (= AF@21 (ite (ite (= (ite  (not (= origCOUNT_164@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@20 unconstrained_54)) (= RBX@3 (bvadd RBX@0 RAX@27))) (and (= CF@24 (ite  (not (bvult RBX@3 RBX@0)) #b0 #b1)) (= OF@22 (bvand (ite  (not (= ((_ extract 63 63) RBX@0) ((_ extract 63 63) RAX@27))) #b0 #b1) (bvxor ((_ extract 63 63) RBX@0) ((_ extract 63 63) RBX@3)))))) (and (and (= AF@22 (ite  (not (= #x0000000000000010 (bvand #x0000000000000010 (bvxor (bvxor RBX@3 RBX@0) RAX@27)))) #b0 #b1)) (= PF@36 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RBX@3 #x0000000000000004) RBX@3) #x0000000000000002) (bvxor (bvlshr RBX@3 #x0000000000000004) RBX@3)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RBX@3 #x0000000000000004) RBX@3) #x0000000000000002) (bvxor (bvlshr RBX@3 #x0000000000000004) RBX@3))))))) (and (= SF@36 ((_ extract 63 63) RBX@3)) (= ZF@36 (ite  (not (= #x0000000000000000 RBX@3)) #b0 #b1)))))) (=> (and (and (and (and (and (= origCOUNT_176@0 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001))) (= RCX@14 (bvlshr RCX@13 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001))))) (and (= CF@25 (ite (ite (= (ite  (not (= origCOUNT_176@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@24 ((_ extract 63 63) (bvshl RCX@13 (bvsub #x0000000000000040 origCOUNT_176@0))))) (= OF@23 (ite (ite (= (ite  (not (= origCOUNT_176@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@22 (ite (ite (= (ite  (not (= origCOUNT_176@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RCX@13) unconstrained_55))))) (and (and (= SF@37 (ite (ite (= (ite  (not (= origCOUNT_176@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@36 ((_ extract 63 63) RCX@14))) (= ZF@37 (ite (ite (= (ite  (not (= origCOUNT_176@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@36 (ite  (not (= #x0000000000000000 RCX@14)) #b0 #b1)))) (and (= PF@37 (ite (ite (= (ite  (not (= origCOUNT_176@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@36 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RCX@14 #x0000000000000004) RCX@14) #x0000000000000002) (bvxor (bvlshr RCX@14 #x0000000000000004) RCX@14)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RCX@14 #x0000000000000004) RCX@14) #x0000000000000002) (bvxor (bvlshr RCX@14 #x0000000000000004) RCX@14))))))) (= AF@23 (ite (ite (= (ite  (not (= origCOUNT_176@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@22 unconstrained_56))))) (and (and (and (= RCX@15 (concat #x00000000 (bvand ((_ extract 31 0) RCX@14) #x00000007))) (= PF@38 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@15) #x00000004) ((_ extract 31 0) RCX@15)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@15) #x00000004) ((_ extract 31 0) RCX@15))) #x00000001) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@15) #x00000004) ((_ extract 31 0) RCX@15)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@15) #x00000004) ((_ extract 31 0) RCX@15)))))))) (and (= SF@38 ((_ extract 31 31) ((_ extract 31 0) RCX@15))) (= ZF@38 (ite  (not (= #x00000000 ((_ extract 31 0) RCX@15))) #b0 #b1)))) (and (and (= origDEST_183@0 ((_ extract 7 0) ((_ extract 31 0) RDX@6))) (= origCOUNT_184@0 (bvand ((_ extract 7 0) ((_ extract 31 0) RCX@15)) (bvsub #x08 #x01)))) (and (= RDX@7 (concat ((_ extract 63 8) RDX@6) (bvshl ((_ extract 7 0) ((_ extract 31 0) RDX@6)) (bvand ((_ extract 7 0) ((_ extract 31 0) RCX@15)) (bvsub #x08 #x01))))) (= CF@26 (ite (ite (= (ite  (not (= origCOUNT_184@0 #x00)) #b0 #b1) #b0) false true) #b0 ((_ extract 0 0) (bvlshr origDEST_183@0 (bvsub #x08 origCOUNT_184@0))))))))) (and (and (and (and (= OF@24 (ite (ite (= (ite  (not (= origCOUNT_184@0 #x00)) #b0 #b1) #b0) false true) #b0 (ite (ite (= (ite  (not (= origCOUNT_184@0 #x01)) #b0 #b1) #b0) false true) (bvxor ((_ extract 7 7) ((_ extract 7 0) ((_ extract 31 0) RDX@7))) CF@26) unconstrained_58))) (= SF@39 (ite (ite (= (ite  (not (= origCOUNT_184@0 #x00)) #b0 #b1) #b0) false true) SF@38 ((_ extract 7 7) ((_ extract 7 0) ((_ extract 31 0) RDX@7)))))) (and (= ZF@39 (ite (ite (= (ite  (not (= origCOUNT_184@0 #x00)) #b0 #b1) #b0) false true) ZF@38 (ite  (not (= #x00 ((_ extract 7 0) ((_ extract 31 0) RDX@7)))) #b0 #b1))) (= PF@39 (ite (ite (= (ite  (not (= origCOUNT_184@0 #x00)) #b0 #b1) #b0) false true) PF@38 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@7)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@7))) #x02) (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@7)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@7)))) #x01) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@7)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@7))) #x02) (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@7)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@7))))))))))) (and (and (= AF@24 (ite (ite (= (ite  (not (= origCOUNT_184@0 #x00)) #b0 #b1) #b0) false true) unconstrained_57 unconstrained_59)) (= mem@5 (|Store_[$bv64]$bv8| mem@4 RBX@3 (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@20 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@0 mem@4)) RBX@3) ((_ extract 7 0) ((_ extract 31 0) RDX@7)))))) (and (= mem_stack@21 (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) (|Store_[$bv64]$bv8| mem_stack@20 RBX@3 (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@20 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@0 mem@5)) RBX@3) ((_ extract 7 0) ((_ extract 31 0) RDX@7)))) mem_stack@20)) (= mem_bitmap@5 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) (|Store_[$bv64]$bv8| mem_bitmap@0 RBX@3 (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@0 mem@5)) RBX@3) ((_ extract 7 0) ((_ extract 31 0) RDX@7)))) mem_bitmap@0))))) (and (and (and (= PF@40 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3)) #x02) (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3))) #x01) (bvxor (bvlshr (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3)) #x02) (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3))))))) (= SF@40 ((_ extract 7 7) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3)))) (and (= ZF@40 (ite  (not (= #x00 (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@3 _stack_low) (bvult RBX@3 _stack_high)) mem_stack@21 (ite  (and (bvuge RBX@3 _bitmap_low) (bvult RBX@3 _bitmap_high)) mem_bitmap@5 mem@5)) RBX@3))) #b0 #b1)) (= RAX@28 (concat #x00000000 #x00000000)))) (and (and (= mem@6 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem@5 (bvadd RBX@3 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@28)))) (bvadd (bvadd RBX@3 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@28))))) (= mem_stack@22 (ite  (and (bvuge (bvadd RBX@3 (concat #xffffffff #xfffffffe)) _stack_low) (bvult (bvadd RBX@3 (concat #xffffffff #xfffffffe)) _stack_high)) (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@21 (bvadd RBX@3 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@28)))) (bvadd (bvadd RBX@3 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@28)))) mem_stack@21))) (and (= mem_bitmap@6 (ite  (and (bvuge (bvadd RBX@3 (concat #xffffffff #xfffffffe)) _bitmap_low) (bvult (bvadd RBX@3 (concat #xffffffff #xfffffffe)) _bitmap_high)) (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_bitmap@5 (bvadd RBX@3 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@28)))) (bvadd (bvadd RBX@3 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@28)))) mem_bitmap@5)) (= RAX@29 (concat #x00000000 ((_ extract 31 0) (bvadd R15@1 (concat #xffffffff #xfffffffe)))))))))) label_0x2c37_correct))))))))
(let ((anon14_Then_correct  (=> (! (and %lbl%+12113 true) :lblpos +12113) (=> (ite (= ZF@18 #b0) false true) (=> (and (= RAX@20 ((_ extract 63 0) (bvadd R8 (concat #xffffffff #xffffffff)))) (= RAX@21 (bvadd RAX@20 RDX))) (=> (and (and (and (and (and (= CF@17 (ite  (not (bvult RAX@21 RAX@20)) #b0 #b1)) (= OF@16 (bvand (ite  (not (= ((_ extract 63 63) RAX@20) ((_ extract 63 63) RDX))) #b0 #b1) (bvxor ((_ extract 63 63) RAX@20) ((_ extract 63 63) RAX@21))))) (and (= AF@16 (ite  (not (= #x0000000000000010 (bvand #x0000000000000010 (bvxor (bvxor RAX@21 RAX@20) RDX)))) #b0 #b1)) (= PF@30 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@21 #x0000000000000004) RAX@21) #x0000000000000002) (bvxor (bvlshr RAX@21 #x0000000000000004) RAX@21)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@21 #x0000000000000004) RAX@21) #x0000000000000002) (bvxor (bvlshr RAX@21 #x0000000000000004) RAX@21)))))))) (and (and (= SF@30 ((_ extract 63 63) RAX@21)) (= ZF@30 (ite  (not (= #x0000000000000000 RAX@21)) #b0 #b1))) (and (= origCOUNT_142@0 (bvand #x0000000000000009 (bvsub #x0000000000000040 #x0000000000000001))) (= RAX@22 (bvlshr RAX@21 (bvand #x0000000000000009 (bvsub #x0000000000000040 #x0000000000000001))))))) (and (and (and (= CF@18 (ite (ite (= (ite  (not (= origCOUNT_142@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@17 ((_ extract 63 63) (bvshl RAX@21 (bvsub #x0000000000000040 origCOUNT_142@0))))) (= OF@17 (ite (ite (= (ite  (not (= origCOUNT_142@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@16 (ite (ite (= (ite  (not (= origCOUNT_142@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RAX@21) unconstrained_45)))) (and (= SF@31 (ite (ite (= (ite  (not (= origCOUNT_142@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@30 ((_ extract 63 63) RAX@22))) (= ZF@31 (ite (ite (= (ite  (not (= origCOUNT_142@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@30 (ite  (not (= #x0000000000000000 RAX@22)) #b0 #b1))))) (and (and (= PF@31 (ite (ite (= (ite  (not (= origCOUNT_142@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@30 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@22 #x0000000000000004) RAX@22) #x0000000000000002) (bvxor (bvlshr RAX@22 #x0000000000000004) RAX@22)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@22 #x0000000000000004) RAX@22) #x0000000000000002) (bvxor (bvlshr RAX@22 #x0000000000000004) RAX@22))))))) (= AF@17 (ite (ite (= (ite  (not (= origCOUNT_142@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@16 unconstrained_46))) (and (= RCX@12 (concat (concat (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd RBX@0 (bvshl RAX@22 #x0000000000000003))))))) (= RAX@23 ((_ extract 63 0) (bvadd R8 (concat #xffffffff #xffffffff)))))))) (and (and (and (and (= RAX@24 (bvadd RAX@23 RDX)) (= CF@19 (ite  (not (bvult RAX@24 RAX@23)) #b0 #b1))) (and (= OF@18 (bvand (ite  (not (= ((_ extract 63 63) RAX@23) ((_ extract 63 63) RDX))) #b0 #b1) (bvxor ((_ extract 63 63) RAX@23) ((_ extract 63 63) RAX@24)))) (= AF@18 (ite  (not (= #x0000000000000010 (bvand #x0000000000000010 (bvxor (bvxor RAX@24 RAX@23) RDX)))) #b0 #b1)))) (and (and (= PF@32 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@24 #x0000000000000004) RAX@24) #x0000000000000002) (bvxor (bvlshr RAX@24 #x0000000000000004) RAX@24)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@24 #x0000000000000004) RAX@24) #x0000000000000002) (bvxor (bvlshr RAX@24 #x0000000000000004) RAX@24)))))) (= SF@32 ((_ extract 63 63) RAX@24))) (and (= ZF@32 (ite  (not (= #x0000000000000000 RAX@24)) #b0 #b1)) (= origCOUNT_154@0 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001)))))) (and (and (and (= RAX@25 (bvlshr RAX@24 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@20 (ite (ite (= (ite  (not (= origCOUNT_154@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@19 ((_ extract 63 63) (bvshl RAX@24 (bvsub #x0000000000000040 origCOUNT_154@0)))))) (and (= OF@19 (ite (ite (= (ite  (not (= origCOUNT_154@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@18 (ite (ite (= (ite  (not (= origCOUNT_154@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RAX@24) unconstrained_47))) (= SF@33 (ite (ite (= (ite  (not (= origCOUNT_154@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@32 ((_ extract 63 63) RAX@25))))) (and (and (= ZF@33 (ite (ite (= (ite  (not (= origCOUNT_154@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@32 (ite  (not (= #x0000000000000000 RAX@25)) #b0 #b1))) (= PF@33 (ite (ite (= (ite  (not (= origCOUNT_154@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@32 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@25 #x0000000000000004) RAX@25) #x0000000000000002) (bvxor (bvlshr RAX@25 #x0000000000000004) RAX@25)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@25 #x0000000000000004) RAX@25) #x0000000000000002) (bvxor (bvlshr RAX@25 #x0000000000000004) RAX@25)))))))) (and (= AF@19 (ite (ite (= (ite  (not (= origCOUNT_154@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@18 unconstrained_48)) (= CF@21 ((_ extract 0 0) (bvlshr RCX@12 (bvand RAX@25 #x000000000000003f))))))))) (and anon15_Then_correct anon15_Else_correct)))))))
(let ((anon10_Then_correct  (=> (! (and %lbl%+12068 true) :lblpos +12068) (=> (ite (= SF@15 #b0) false true) (=> (and (and (and (and (= RAX@8 ((_ extract 63 0) (bvadd R8 (concat #xffffffff #xffffffff)))) (= RAX@9 (bvadd RAX@8 RDX))) (and (= CF@8 (ite  (not (bvult RAX@9 RAX@8)) #b0 #b1)) (= OF@8 (bvand (ite  (not (= ((_ extract 63 63) RAX@8) ((_ extract 63 63) RDX))) #b0 #b1) (bvxor ((_ extract 63 63) RAX@8) ((_ extract 63 63) RAX@9)))))) (and (and (= AF@8 (ite  (not (= #x0000000000000010 (bvand #x0000000000000010 (bvxor (bvxor RAX@9 RAX@8) RDX)))) #b0 #b1)) (= PF@16 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@9 #x0000000000000004) RAX@9) #x0000000000000002) (bvxor (bvlshr RAX@9 #x0000000000000004) RAX@9)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@9 #x0000000000000004) RAX@9) #x0000000000000002) (bvxor (bvlshr RAX@9 #x0000000000000004) RAX@9))))))) (and (= SF@16 ((_ extract 63 63) RAX@9)) (= ZF@16 (ite  (not (= #x0000000000000000 RAX@9)) #b0 #b1))))) (and (and (and (= RAX@10 (bvand RAX@9 (concat #xffffffff #xe0000000))) (= PF@17 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@10 #x0000000000000004) RAX@10) #x0000000000000002) (bvxor (bvlshr RAX@10 #x0000000000000004) RAX@10)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@10 #x0000000000000004) RAX@10) #x0000000000000002) (bvxor (bvlshr RAX@10 #x0000000000000004) RAX@10))))))) (and (= SF@17 ((_ extract 63 63) RAX@10)) (= ZF@17 (ite  (not (= #x0000000000000000 RAX@10)) #b0 #b1)))) (and (and (= RAX@11 (bvxor RAX@10 #x0000000020000000)) (= PF@18 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@11 #x0000000000000004) RAX@11) #x0000000000000002) (bvxor (bvlshr RAX@11 #x0000000000000004) RAX@11)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@11 #x0000000000000004) RAX@11) #x0000000000000002) (bvxor (bvlshr RAX@11 #x0000000000000004) RAX@11))))))) (and (= SF@18 ((_ extract 63 63) RAX@11)) (= ZF@18 (ite  (not (= #x0000000000000000 RAX@11)) #b0 #b1)))))) (and anon14_Then_correct anon14_Else_correct))))))
(let ((anon13_Then_correct  (=> (! (and %lbl%+12089 true) :lblpos +12089) (=> (and (ite (= CF@12 #b0) false true) (= mem@1 (|Store_[$bv64]$bv8| fresh_0 RDX@3 ((_ extract 7 0) ((_ extract 31 0) R15@0))))) (=> (and (and (and (= mem_stack@17 (ite  (and (bvuge RDX@3 _stack_low) (bvult RDX@3 _stack_high)) (|Store_[$bv64]$bv8| fresh_0 RDX@3 ((_ extract 7 0) ((_ extract 31 0) R15@0))) fresh_0)) (= RAX@16 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000060)))) (and (= RDX@4 (concat #x00000000 #x000000fe)) (= origCOUNT_98@0 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001))))) (and (and (= RAX@17 (bvlshr RAX@16 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@13 (ite (ite (= (ite  (not (= origCOUNT_98@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@12 ((_ extract 63 63) (bvshl RAX@16 (bvsub #x0000000000000040 origCOUNT_98@0)))))) (and (= OF@12 (ite (ite (= (ite  (not (= origCOUNT_98@0 #x0000000000000000)) #b0 #b1) #b0) false true) unconstrained_30 (ite (ite (= (ite  (not (= origCOUNT_98@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RAX@16) unconstrained_34))) (= SF@24 (ite (ite (= (ite  (not (= origCOUNT_98@0 #x0000000000000000)) #b0 #b1) #b0) false true) unconstrained_31 ((_ extract 63 63) RAX@17)))))) (=> (and (and (and (and (and (= ZF@24 (ite (ite (= (ite  (not (= origCOUNT_98@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@23 (ite  (not (= #x0000000000000000 RAX@17)) #b0 #b1))) (= PF@24 (ite (ite (= (ite  (not (= origCOUNT_98@0 #x0000000000000000)) #b0 #b1) #b0) false true) unconstrained_33 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@17 #x0000000000000004) RAX@17) #x0000000000000002) (bvxor (bvlshr RAX@17 #x0000000000000004) RAX@17)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@17 #x0000000000000004) RAX@17) #x0000000000000002) (bvxor (bvlshr RAX@17 #x0000000000000004) RAX@17)))))))) (and (= AF@12 (ite (ite (= (ite  (not (= origCOUNT_98@0 #x0000000000000000)) #b0 #b1) #b0) false true) unconstrained_32 unconstrained_35)) (= RCX@9 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000060))))) (and (and (= RBX@2 (bvadd RBX@0 RAX@17)) (= CF@14 (ite  (not (bvult RBX@2 RBX@0)) #b0 #b1))) (and (= OF@13 (bvand (ite  (not (= ((_ extract 63 63) RBX@0) ((_ extract 63 63) RAX@17))) #b0 #b1) (bvxor ((_ extract 63 63) RBX@0) ((_ extract 63 63) RBX@2)))) (= AF@13 (ite  (not (= #x0000000000000010 (bvand #x0000000000000010 (bvxor (bvxor RBX@2 RBX@0) RAX@17)))) #b0 #b1))))) (and (and (and (= PF@25 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RBX@2 #x0000000000000004) RBX@2) #x0000000000000002) (bvxor (bvlshr RBX@2 #x0000000000000004) RBX@2)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RBX@2 #x0000000000000004) RBX@2) #x0000000000000002) (bvxor (bvlshr RBX@2 #x0000000000000004) RBX@2)))))) (= SF@25 ((_ extract 63 63) RBX@2))) (and (= ZF@25 (ite  (not (= #x0000000000000000 RBX@2)) #b0 #b1)) (= origCOUNT_110@0 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001))))) (and (and (= RCX@10 (bvlshr RCX@9 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@15 (ite (ite (= (ite  (not (= origCOUNT_110@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@14 ((_ extract 63 63) (bvshl RCX@9 (bvsub #x0000000000000040 origCOUNT_110@0)))))) (and (= OF@14 (ite (ite (= (ite  (not (= origCOUNT_110@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@13 (ite (ite (= (ite  (not (= origCOUNT_110@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RCX@9) unconstrained_36))) (= SF@26 (ite (ite (= (ite  (not (= origCOUNT_110@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@25 ((_ extract 63 63) RCX@10))))))) (and (and (and (and (= ZF@26 (ite (ite (= (ite  (not (= origCOUNT_110@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@25 (ite  (not (= #x0000000000000000 RCX@10)) #b0 #b1))) (= PF@26 (ite (ite (= (ite  (not (= origCOUNT_110@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@25 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RCX@10 #x0000000000000004) RCX@10) #x0000000000000002) (bvxor (bvlshr RCX@10 #x0000000000000004) RCX@10)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RCX@10 #x0000000000000004) RCX@10) #x0000000000000002) (bvxor (bvlshr RCX@10 #x0000000000000004) RCX@10)))))))) (and (= AF@14 (ite (ite (= (ite  (not (= origCOUNT_110@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@13 unconstrained_37)) (= RCX@11 (concat #x00000000 (bvand ((_ extract 31 0) RCX@10) #x00000007))))) (and (and (= PF@27 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@11) #x00000004) ((_ extract 31 0) RCX@11)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@11) #x00000004) ((_ extract 31 0) RCX@11))) #x00000001) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@11) #x00000004) ((_ extract 31 0) RCX@11)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@11) #x00000004) ((_ extract 31 0) RCX@11))))))) (= SF@27 ((_ extract 31 31) ((_ extract 31 0) RCX@11)))) (and (= ZF@27 (ite  (not (= #x00000000 ((_ extract 31 0) RCX@11))) #b0 #b1)) (= origDEST_117@0 ((_ extract 7 0) ((_ extract 31 0) RDX@4)))))) (and (and (and (= origCOUNT_118@0 (bvand ((_ extract 7 0) ((_ extract 31 0) RCX@11)) (bvsub #x08 #x01))) (= RDX@5 (concat ((_ extract 63 8) RDX@4) (bvshl ((_ extract 7 0) ((_ extract 31 0) RDX@4)) (bvand ((_ extract 7 0) ((_ extract 31 0) RCX@11)) (bvsub #x08 #x01)))))) (and (= CF@16 (ite (ite (= (ite  (not (= origCOUNT_118@0 #x00)) #b0 #b1) #b0) false true) #b0 ((_ extract 0 0) (bvlshr origDEST_117@0 (bvsub #x08 origCOUNT_118@0))))) (= OF@15 (ite (ite (= (ite  (not (= origCOUNT_118@0 #x00)) #b0 #b1) #b0) false true) #b0 (ite (ite (= (ite  (not (= origCOUNT_118@0 #x01)) #b0 #b1) #b0) false true) (bvxor ((_ extract 7 7) ((_ extract 7 0) ((_ extract 31 0) RDX@5))) CF@16) unconstrained_39))))) (and (and (= SF@28 (ite (ite (= (ite  (not (= origCOUNT_118@0 #x00)) #b0 #b1) #b0) false true) SF@27 ((_ extract 7 7) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) (= ZF@28 (ite (ite (= (ite  (not (= origCOUNT_118@0 #x00)) #b0 #b1) #b0) false true) ZF@27 (ite  (not (= #x00 ((_ extract 7 0) ((_ extract 31 0) RDX@5)))) #b0 #b1)))) (and (= PF@28 (ite (ite (= (ite  (not (= origCOUNT_118@0 #x00)) #b0 #b1) #b0) false true) PF@27 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@5)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@5))) #x02) (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@5)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@5)))) #x01) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@5)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@5))) #x02) (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@5)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))))))) (= AF@15 (ite (ite (= (ite  (not (= origCOUNT_118@0 #x00)) #b0 #b1) #b0) false true) unconstrained_38 unconstrained_40))))))) (and (! (or %lbl%@23403  (=> (and (and (and (bvuge (bvadd RBX@2 #x0000000000000000) _bitmap_low) (bvult (bvadd RBX@2 #x0000000000000000) _bitmap_high)) (not (= (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000)) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))))) (not (= ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5)))) #x00))) (and (bvult (bvadd _virtual_address_space_low (bvadd (bvshl (bvsub (bvadd RBX@2 #x0000000000000000) _bitmap_low) #x0000000000000006) (ite (not (= ((_ extract 7 7) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 7 7) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000003f (ite (not (= ((_ extract 6 6) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 6 6) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000037 (ite (not (= ((_ extract 5 5) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 5 5) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000002f (ite (not (= ((_ extract 4 4) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 4 4) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000027 (ite (not (= ((_ extract 3 3) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 3 3) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000001f (ite (not (= ((_ extract 2 2) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 2 2) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000017 (ite (not (= ((_ extract 1 1) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 1 1) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000000f #x0000000000000007))))))))) (bvsub RSP #x0000000000000008)) (bvuge (bvadd _virtual_address_space_low (bvadd (bvshl (bvsub (bvadd RBX@2 #x0000000000000000) _bitmap_low) #x0000000000000006) (ite (not (= ((_ extract 0 0) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 0 0) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000000 (ite (not (= ((_ extract 1 1) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 1 1) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000008 (ite (not (= ((_ extract 2 2) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 2 2) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000010 (ite (not (= ((_ extract 3 3) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 3 3) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000018 (ite (not (= ((_ extract 4 4) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 4 4) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000020 (ite (not (= ((_ extract 5 5) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 5 5) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000028 (ite (not (= ((_ extract 6 6) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 6 6) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000030 #x0000000000000038))))))))) (bvsub RSP #x00000000000000e8))))) :lblneg @23403) (=> (=> (and (and (and (bvuge (bvadd RBX@2 #x0000000000000000) _bitmap_low) (bvult (bvadd RBX@2 #x0000000000000000) _bitmap_high)) (not (= (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000)) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))))) (not (= ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5)))) #x00))) (and (bvult (bvadd _virtual_address_space_low (bvadd (bvshl (bvsub (bvadd RBX@2 #x0000000000000000) _bitmap_low) #x0000000000000006) (ite (not (= ((_ extract 7 7) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 7 7) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000003f (ite (not (= ((_ extract 6 6) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 6 6) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000037 (ite (not (= ((_ extract 5 5) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 5 5) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000002f (ite (not (= ((_ extract 4 4) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 4 4) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000027 (ite (not (= ((_ extract 3 3) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 3 3) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000001f (ite (not (= ((_ extract 2 2) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 2 2) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000017 (ite (not (= ((_ extract 1 1) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 1 1) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x000000000000000f #x0000000000000007))))))))) (bvsub RSP #x0000000000000008)) (bvuge (bvadd _virtual_address_space_low (bvadd (bvshl (bvsub (bvadd RBX@2 #x0000000000000000) _bitmap_low) #x0000000000000006) (ite (not (= ((_ extract 0 0) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 0 0) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000000 (ite (not (= ((_ extract 1 1) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 1 1) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000008 (ite (not (= ((_ extract 2 2) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 2 2) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000010 (ite (not (= ((_ extract 3 3) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 3 3) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000018 (ite (not (= ((_ extract 4 4) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 4 4) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000020 (ite (not (= ((_ extract 5 5) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 5 5) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000028 (ite (not (= ((_ extract 6 6) ((_ extract 7 0) (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) ((_ extract 6 6) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@2 #x0000000000000000))))) #x0000000000000030 #x0000000000000038))))))))) (bvsub RSP #x00000000000000e8)))) (=> (= mem@2 (|Store_[$bv64]$bv8| mem@1 RBX@2 (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@1)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5))))) (=> (and (= mem_stack@18 (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) (|Store_[$bv64]$bv8| mem_stack@17 RBX@2 (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@17 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@2)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5)))) mem_stack@17)) (= mem_bitmap@3 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) (|Store_[$bv64]$bv8| mem_bitmap@0 RBX@2 (bvand (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@0 mem@2)) RBX@2) ((_ extract 7 0) ((_ extract 31 0) RDX@5)))) mem_bitmap@0))) (=> (and (and (and (= PF@29 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2)) #x02) (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2))) #x01) (bvxor (bvlshr (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2)) #x02) (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2))))))) (= SF@29 ((_ extract 7 7) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2)))) (and (= ZF@29 (ite  (not (= #x00 (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@2 _stack_low) (bvult RBX@2 _stack_high)) mem_stack@18 (ite  (and (bvuge RBX@2 _bitmap_low) (bvult RBX@2 _bitmap_high)) mem_bitmap@3 mem@2)) RBX@2))) #b0 #b1)) (= RAX@18 (concat #x00000000 #x00000000)))) (and (and (= mem@3 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem@2 (bvadd RBX@2 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@18)))) (bvadd (bvadd RBX@2 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@18))))) (= mem_stack@19 (ite  (and (bvuge (bvadd RBX@2 (concat #xffffffff #xfffffffe)) _stack_low) (bvult (bvadd RBX@2 (concat #xffffffff #xfffffffe)) _stack_high)) (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@18 (bvadd RBX@2 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@18)))) (bvadd (bvadd RBX@2 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@18)))) mem_stack@18))) (and (= mem_bitmap@4 (ite  (and (bvuge (bvadd RBX@2 (concat #xffffffff #xfffffffe)) _bitmap_low) (bvult (bvadd RBX@2 (concat #xffffffff #xfffffffe)) _bitmap_high)) (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_bitmap@3 (bvadd RBX@2 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@18)))) (bvadd (bvadd RBX@2 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@18)))) mem_bitmap@3)) (= RAX@19 (concat #x00000000 ((_ extract 31 0) R8@2)))))) label_0x2c37_correct)))))))))))
(let ((anon12_Then_correct  (=> (! (and %lbl%+12079 true) :lblpos +12079) (=> (ite (= ZF@21 #b0) false true) (=> (and (= origCOUNT_86@0 (bvand #x0000000000000009 (bvsub #x0000000000000040 #x0000000000000001))) (= RAX@14 (bvlshr RDX@3 (bvand #x0000000000000009 (bvsub #x0000000000000040 #x0000000000000001))))) (=> (and (and (and (and (= CF@10 (ite (ite (= (ite  (not (= origCOUNT_86@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b0 ((_ extract 63 63) (bvshl RDX@3 (bvsub #x0000000000000040 origCOUNT_86@0))))) (= OF@10 (ite (ite (= (ite  (not (= origCOUNT_86@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b0 (ite (ite (= (ite  (not (= origCOUNT_86@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RDX@3) unconstrained_26)))) (and (= SF@22 (ite (ite (= (ite  (not (= origCOUNT_86@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@21 ((_ extract 63 63) RAX@14))) (= ZF@22 (ite (ite (= (ite  (not (= origCOUNT_86@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@21 (ite  (not (= #x0000000000000000 RAX@14)) #b0 #b1))))) (and (and (= PF@22 (ite (ite (= (ite  (not (= origCOUNT_86@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@21 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@14 #x0000000000000004) RAX@14) #x0000000000000002) (bvxor (bvlshr RAX@14 #x0000000000000004) RAX@14)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@14 #x0000000000000004) RAX@14) #x0000000000000002) (bvxor (bvlshr RAX@14 #x0000000000000004) RAX@14))))))) (= AF@10 (ite (ite (= (ite  (not (= origCOUNT_86@0 #x0000000000000000)) #b0 #b1) #b0) false true) unconstrained_25 unconstrained_27))) (and (= RCX@8 (concat (concat (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _stack_high)) fresh_0 (ite  (and (bvuge (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_low) (bvult (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003)) _bitmap_high)) mem_bitmap@0 fresh_0)) (bvadd RBX@0 (bvshl RAX@14 #x0000000000000003))))))) (= origCOUNT_92@0 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001)))))) (and (and (and (= RAX@15 (bvlshr RDX@3 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@11 (ite (ite (= (ite  (not (= origCOUNT_92@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@10 ((_ extract 63 63) (bvshl RDX@3 (bvsub #x0000000000000040 origCOUNT_92@0)))))) (and (= OF@11 (ite (ite (= (ite  (not (= origCOUNT_92@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@10 (ite (ite (= (ite  (not (= origCOUNT_92@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RDX@3) unconstrained_28))) (= SF@23 (ite (ite (= (ite  (not (= origCOUNT_92@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@22 ((_ extract 63 63) RAX@15))))) (and (and (= ZF@23 (ite (ite (= (ite  (not (= origCOUNT_92@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@22 (ite  (not (= #x0000000000000000 RAX@15)) #b0 #b1))) (= PF@23 (ite (ite (= (ite  (not (= origCOUNT_92@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@22 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@15 #x0000000000000004) RAX@15) #x0000000000000002) (bvxor (bvlshr RAX@15 #x0000000000000004) RAX@15)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@15 #x0000000000000004) RAX@15) #x0000000000000002) (bvxor (bvlshr RAX@15 #x0000000000000004) RAX@15)))))))) (and (= AF@11 (ite (ite (= (ite  (not (= origCOUNT_92@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@10 unconstrained_29)) (= CF@12 ((_ extract 0 0) (bvlshr RCX@8 (bvand RAX@15 #x000000000000003f)))))))) (and anon13_Then_correct anon13_Else_correct)))))))
(let ((anon11_Else_correct  (=> (! (and %lbl%+12073 true) :lblpos +12073) (=> (and (not (ite (= SF@19 #b0) false true)) (= RDX@3 (concat (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000030))))))) (=> (and (and (and (= RAX@12 (bvand RDX@3 (concat #xffffffff #xe0000000))) (= PF@20 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@12 #x0000000000000004) RAX@12) #x0000000000000002) (bvxor (bvlshr RAX@12 #x0000000000000004) RAX@12)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@12 #x0000000000000004) RAX@12) #x0000000000000002) (bvxor (bvlshr RAX@12 #x0000000000000004) RAX@12))))))) (and (= SF@20 ((_ extract 63 63) RAX@12)) (= ZF@20 (ite  (not (= #x0000000000000000 RAX@12)) #b0 #b1)))) (and (and (= RAX@13 (bvxor RAX@12 #x0000000020000000)) (= PF@21 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@13 #x0000000000000004) RAX@13) #x0000000000000002) (bvxor (bvlshr RAX@13 #x0000000000000004) RAX@13)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@13 #x0000000000000004) RAX@13) #x0000000000000002) (bvxor (bvlshr RAX@13 #x0000000000000004) RAX@13))))))) (and (= SF@21 ((_ extract 63 63) RAX@13)) (= ZF@21 (ite  (not (= #x0000000000000000 RAX@13)) #b0 #b1))))) (and anon12_Then_correct anon12_Else_correct))))))
(let ((anon10_Else_correct  (=> (! (and %lbl%+12069 true) :lblpos +12069) (=> (and (and (and (not (ite (= SF@15 #b0) false true)) (= t_77@0 (bvsub (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) #x00000001))) (and (= CF@9 (ite  (not (bvult (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) #x00000001)) #b0 #b1)) (= OF@9 ((_ extract 31 31) (bvand (bvxor (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) #x00000001) (bvxor (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038)))) t_77@0)))))) (and (and (= AF@9 (ite  (not (= #x00000010 (bvand #x00000010 (bvxor (bvxor t_77@0 (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd RSP@3 #x0000000000000038))))) #x00000001)))) #b0 #b1)) (= PF@19 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr t_77@0 #x00000004) t_77@0) #x00000002) (bvxor (bvlshr t_77@0 #x00000004) t_77@0)) #x00000001) (bvxor (bvlshr (bvxor (bvlshr t_77@0 #x00000004) t_77@0) #x00000002) (bvxor (bvlshr t_77@0 #x00000004) t_77@0))))))) (and (= SF@19 ((_ extract 31 31) t_77@0)) (= ZF@19 (ite  (not (= #x00000000 t_77@0)) #b0 #b1))))) (and anon11_Then_correct anon11_Else_correct)))))
(let ((anon9_Else_correct  (=> (! (and %lbl%+12053 true) :lblpos +12053) (=> (not (ite (= ZF@7 #b0) false true)) (=> (and (and (and (= mem_stack@13 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@11 (bvadd RSP@3 #x0000000000000038) ((_ extract 7 0) ((_ extract 15 0) #x7fffffff))) (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) #x7fffffff))) (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) #x7fffffff))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) #x7fffffff)))) (= mem_stack@14 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@13 (bvadd RSP@3 #x0000000000000048) ((_ extract 7 0) ((_ extract 15 0) #x00000042))) (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) #x00000042))) (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) #x00000042))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) #x00000042))))) (and (= mem_stack@15 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@14 (bvadd RSP@3 #x0000000000000040) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RDX)))) (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RDX)))) (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RDX)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RDX)))) (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RDX)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RDX)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RDX)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RDX))))) (= mem_stack@16 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@15 (bvadd RSP@3 #x0000000000000030) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RDX)))) (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RDX)))) (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RDX)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RDX)))) (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RDX)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RDX)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RDX)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RDX))))))) (and (and (policy RCX) (= R9@0 (concat (concat (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000118) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd RSP@3 #x0000000000000118) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd RSP@3 #x0000000000000118) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd RSP@3 #x0000000000000118) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd RSP@3 #x0000000000000118) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd RSP@3 #x0000000000000118) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd RSP@3 #x0000000000000118) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd RSP@3 #x0000000000000118))))))) (and (= RCX@6 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000030))) (= R8@0 (concat (concat (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000110) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd RSP@3 #x0000000000000110) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd RSP@3 #x0000000000000110) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd RSP@3 #x0000000000000110) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd RSP@3 #x0000000000000110) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd RSP@3 #x0000000000000110) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd RSP@3 #x0000000000000110) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd RSP@3 #x0000000000000110))))))))) (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (T_fresh_0 (bvsub RSP #x0000000000000008)) (T_fresh_0 (bvsub RSP #x0000000000000010))) (T_fresh_0 (bvsub RSP #x0000000000000018))) (T_fresh_0 (bvsub RSP #x0000000000000020))) (T_fresh_0 (bvsub RSP #x0000000000000028))) (T_fresh_0 (bvsub RSP #x0000000000000030))) (T_fresh_0 (bvsub RSP #x0000000000000038))) (T_fresh_0 (bvsub RSP #x0000000000000040))) (T_fresh_0 (bvsub RSP #x0000000000000048))) (T_fresh_0 (bvsub RSP #x0000000000000050))) (T_fresh_0 (bvsub RSP #x0000000000000058))) (T_fresh_0 (bvsub RSP #x0000000000000060))) (T_fresh_0 (bvsub RSP #x0000000000000068))) (T_fresh_0 (bvsub RSP #x0000000000000070))) (T_fresh_0 (bvsub RSP #x0000000000000078))) (T_fresh_0 (bvsub RSP #x0000000000000080))) (T_fresh_0 (bvsub RSP #x0000000000000088))) (T_fresh_0 (bvsub RSP #x0000000000000090))) (T_fresh_0 (bvsub RSP #x0000000000000098))) (T_fresh_0 (bvsub RSP #x00000000000000a0))) (T_fresh_0 (bvsub RSP #x00000000000000a8))) (T_fresh_0 (bvsub RSP #x00000000000000b0))) (T_fresh_0 (bvsub RSP #x00000000000000b8))) (T_fresh_0 (bvsub RSP #x00000000000000c0))) (T_fresh_0 (bvsub RSP #x00000000000000c8))) (T_fresh_0 (bvsub RSP #x00000000000000d0))) (T_fresh_0 (bvsub RSP #x00000000000000d8))) (T_fresh_0 (bvsub RSP #x00000000000000e0))) (T_fresh_0 (bvsub RSP #x00000000000000e8))) (forall ((i@@2 (_ BitVec 64)) ) (!  (=> (T_fresh_0 i@@2) (=> (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvlshr (bvsub i@@2 _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub i@@2 _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub i@@2 _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (= (concat (concat (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd (bvadd i@@2 #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd i@@2 #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd i@@2 #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd i@@2 #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd (bvadd i@@2 #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 (bvadd i@@2 #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_stack@16 (bvadd i@@2 #x0000000000000001)) (|Select_[$bv64]$bv8| mem_stack@16 i@@2)))) (concat (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd i@@2 #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd i@@2 #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd i@@2 #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd i@@2 #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd i@@2 #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd i@@2 #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd i@@2 #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 i@@2)))))))
 :qid |split183.873:20|
 :skolemid |4|
 :pattern ( (T_fresh_0 i@@2))
))) (and (= (concat (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd (bvadd _guard_writeTable_ptr #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd _guard_writeTable_ptr #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd _guard_writeTable_ptr #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd _guard_writeTable_ptr #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd (bvadd _guard_writeTable_ptr #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 (bvadd _guard_writeTable_ptr #x0000000000000002))) (concat (|Select_[$bv64]$bv8| fresh_0 (bvadd _guard_writeTable_ptr #x0000000000000001)) (|Select_[$bv64]$bv8| fresh_0 _guard_writeTable_ptr)))) _bitmap_low) (= R8@2 (concat #x00000000 ((_ extract 31 0) RAX@7))))) (and (and (= t_73@0 (bvand ((_ extract 31 0) RAX@7) ((_ extract 31 0) RAX@7))) (= PF@15 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr t_73@0 #x00000004) t_73@0) #x00000002) (bvxor (bvlshr t_73@0 #x00000004) t_73@0)) #x00000001) (bvxor (bvlshr (bvxor (bvlshr t_73@0 #x00000004) t_73@0) #x00000002) (bvxor (bvlshr t_73@0 #x00000004) t_73@0))))))) (and (= SF@15 ((_ extract 31 31) t_73@0)) (= ZF@15 (ite  (not (= #x00000000 t_73@0)) #b0 #b1))))) (and anon10_Then_correct anon10_Else_correct)))))))
(let ((label_0x2ae7_correct  (=> (! (and %lbl%+12037 true) :lblpos +12037) (=> (= RAX@3 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000060))) (=> (and (= RDX@0 (concat #x00000000 #x000000fe)) (= origCOUNT_38@0 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001)))) (=> (and (and (and (and (= RAX@4 (bvlshr RAX@3 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@4 (ite (ite (= (ite  (not (= origCOUNT_38@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF ((_ extract 63 63) (bvshl RAX@3 (bvsub #x0000000000000040 origCOUNT_38@0)))))) (and (= OF@4 (ite (ite (= (ite  (not (= origCOUNT_38@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF (ite (ite (= (ite  (not (= origCOUNT_38@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RAX@3) unconstrained_12))) (= SF@8 (ite (ite (= (ite  (not (= origCOUNT_38@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF ((_ extract 63 63) RAX@4))))) (and (and (= ZF@8 (ite (ite (= (ite  (not (= origCOUNT_38@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF (ite  (not (= #x0000000000000000 RAX@4)) #b0 #b1))) (= PF@8 (ite (ite (= (ite  (not (= origCOUNT_38@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@4 #x0000000000000004) RAX@4) #x0000000000000002) (bvxor (bvlshr RAX@4 #x0000000000000004) RAX@4)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@4 #x0000000000000004) RAX@4) #x0000000000000002) (bvxor (bvlshr RAX@4 #x0000000000000004) RAX@4)))))))) (and (= AF@4 (ite (ite (= (ite  (not (= origCOUNT_38@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF unconstrained_13)) (= RCX@3 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000060)))))) (and (and (and (= RBX@1 (bvadd RBX@0 RAX@4)) (= CF@5 (ite  (not (bvult RBX@1 RBX@0)) #b0 #b1))) (and (= OF@5 (bvand (ite  (not (= ((_ extract 63 63) RBX@0) ((_ extract 63 63) RAX@4))) #b0 #b1) (bvxor ((_ extract 63 63) RBX@0) ((_ extract 63 63) RBX@1)))) (= AF@5 (ite  (not (= #x0000000000000010 (bvand #x0000000000000010 (bvxor (bvxor RBX@1 RBX@0) RAX@4)))) #b0 #b1)))) (and (and (= PF@9 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RBX@1 #x0000000000000004) RBX@1) #x0000000000000002) (bvxor (bvlshr RBX@1 #x0000000000000004) RBX@1)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RBX@1 #x0000000000000004) RBX@1) #x0000000000000002) (bvxor (bvlshr RBX@1 #x0000000000000004) RBX@1)))))) (= SF@9 ((_ extract 63 63) RBX@1))) (and (= ZF@9 (ite  (not (= #x0000000000000000 RBX@1)) #b0 #b1)) (= origCOUNT_50@0 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001))))))) (=> (and (and (and (and (and (= RCX@4 (bvlshr RCX@3 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@6 (ite (ite (= (ite  (not (= origCOUNT_50@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@5 ((_ extract 63 63) (bvshl RCX@3 (bvsub #x0000000000000040 origCOUNT_50@0)))))) (and (= OF@6 (ite (ite (= (ite  (not (= origCOUNT_50@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@5 (ite (ite (= (ite  (not (= origCOUNT_50@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RCX@3) unconstrained_14))) (= SF@10 (ite (ite (= (ite  (not (= origCOUNT_50@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@9 ((_ extract 63 63) RCX@4))))) (and (and (= ZF@10 (ite (ite (= (ite  (not (= origCOUNT_50@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@9 (ite  (not (= #x0000000000000000 RCX@4)) #b0 #b1))) (= PF@10 (ite (ite (= (ite  (not (= origCOUNT_50@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@9 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RCX@4 #x0000000000000004) RCX@4) #x0000000000000002) (bvxor (bvlshr RCX@4 #x0000000000000004) RCX@4)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RCX@4 #x0000000000000004) RCX@4) #x0000000000000002) (bvxor (bvlshr RCX@4 #x0000000000000004) RCX@4)))))))) (and (= AF@6 (ite (ite (= (ite  (not (= origCOUNT_50@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@5 unconstrained_15)) (= RCX@5 (concat #x00000000 (bvand ((_ extract 31 0) RCX@4) #x00000007)))))) (and (and (and (= PF@11 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@5) #x00000004) ((_ extract 31 0) RCX@5)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@5) #x00000004) ((_ extract 31 0) RCX@5))) #x00000001) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@5) #x00000004) ((_ extract 31 0) RCX@5)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@5) #x00000004) ((_ extract 31 0) RCX@5))))))) (= SF@11 ((_ extract 31 31) ((_ extract 31 0) RCX@5)))) (and (= ZF@11 (ite  (not (= #x00000000 ((_ extract 31 0) RCX@5))) #b0 #b1)) (= RAX@5 (concat #x00000000 #x00000000)))) (and (and (= origDEST_57@0 ((_ extract 7 0) ((_ extract 31 0) RDX@0))) (= origCOUNT_58@0 (bvand ((_ extract 7 0) ((_ extract 31 0) RCX@5)) (bvsub #x08 #x01)))) (and (= RDX@1 (concat ((_ extract 63 8) RDX@0) (bvshl ((_ extract 7 0) ((_ extract 31 0) RDX@0)) (bvand ((_ extract 7 0) ((_ extract 31 0) RCX@5)) (bvsub #x08 #x01))))) (= CF@7 (ite (ite (= (ite  (not (= origCOUNT_58@0 #x00)) #b0 #b1) #b0) false true) #b0 ((_ extract 0 0) (bvlshr origDEST_57@0 (bvsub #x08 origCOUNT_58@0))))))))) (and (and (and (and (= OF@7 (ite (ite (= (ite  (not (= origCOUNT_58@0 #x00)) #b0 #b1) #b0) false true) #b0 (ite (ite (= (ite  (not (= origCOUNT_58@0 #x01)) #b0 #b1) #b0) false true) (bvxor ((_ extract 7 7) ((_ extract 7 0) ((_ extract 31 0) RDX@1))) CF@7) unconstrained_18))) (= SF@12 (ite (ite (= (ite  (not (= origCOUNT_58@0 #x00)) #b0 #b1) #b0) false true) #b0 ((_ extract 7 7) ((_ extract 7 0) ((_ extract 31 0) RDX@1)))))) (and (= ZF@12 (ite (ite (= (ite  (not (= origCOUNT_58@0 #x00)) #b0 #b1) #b0) false true) #b1 (ite  (not (= #x00 ((_ extract 7 0) ((_ extract 31 0) RDX@1)))) #b0 #b1))) (= PF@12 (ite (ite (= (ite  (not (= origCOUNT_58@0 #x00)) #b0 #b1) #b0) false true) #b1 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@1)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@1))) #x02) (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@1)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@1)))) #x01) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@1)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@1))) #x02) (bvxor (bvlshr ((_ extract 7 0) ((_ extract 31 0) RDX@1)) #x04) ((_ extract 7 0) ((_ extract 31 0) RDX@1))))))))))) (and (and (= AF@7 (ite (ite (= (ite  (not (= origCOUNT_58@0 #x00)) #b0 #b1) #b0) false true) unconstrained_17 unconstrained_19)) (= mem_bitmap@1 (|Store_[$bv64]$bv8| mem_bitmap@0 RBX@1 (bvand (|Select_[$bv64]$bv8| mem_bitmap@0 RBX@1) ((_ extract 7 0) ((_ extract 31 0) RDX@1)))))) (and (= PF@13 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1)) #x02) (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1))) #x01) (bvxor (bvlshr (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1)) #x02) (bvxor (bvlshr (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1) #x04) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1))))))) (= SF@13 ((_ extract 7 7) (|Select_[$bv64]$bv8| (ite  (and (bvuge RBX@1 _stack_low) (bvult RBX@1 _stack_high)) mem_stack@11 (ite  (and (bvuge RBX@1 _bitmap_low) (bvult RBX@1 _bitmap_high)) mem_bitmap@1 mem@@0)) RBX@1)))))) (and (and (and (= ZF@13 (ite  (not (= #x00 (|Select_[$bv64]$bv8| mem_bitmap@1 RBX@1))) #b0 #b1)) (= mem@0 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem@@0 (bvadd RBX@1 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@5)))) (bvadd (bvadd RBX@1 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@5)))))) (and (= mem_stack@12 (ite  (and (bvuge (bvadd RBX@1 (concat #xffffffff #xfffffffe)) _stack_low) (bvult (bvadd RBX@1 (concat #xffffffff #xfffffffe)) _stack_high)) (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@11 (bvadd RBX@1 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@5)))) (bvadd (bvadd RBX@1 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@5)))) mem_stack@11)) (= mem_bitmap@2 (ite  (and (bvuge (bvadd RBX@1 (concat #xffffffff #xfffffffe)) _bitmap_low) (bvult (bvadd RBX@1 (concat #xffffffff #xfffffffe)) _bitmap_high)) (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_bitmap@1 (bvadd RBX@1 (concat #xffffffff #xfffffffe)) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@5)))) (bvadd (bvadd RBX@1 (concat #xffffffff #xfffffffe)) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@5)))) mem_bitmap@1)))) (and (and (= RAX@6 (concat #x00000000 (bvor ((_ extract 31 0) RAX@5) #xffffffff))) (= PF@14 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RAX@6) #x00000004) ((_ extract 31 0) RAX@6)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RAX@6) #x00000004) ((_ extract 31 0) RAX@6))) #x00000001) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RAX@6) #x00000004) ((_ extract 31 0) RAX@6)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RAX@6) #x00000004) ((_ extract 31 0) RAX@6)))))))) (and (= SF@14 ((_ extract 31 31) ((_ extract 31 0) RAX@6))) (= ZF@14 (ite  (not (= #x00000000 ((_ extract 31 0) RAX@6))) #b0 #b1))))))) label_0x2c37_correct)))))))
(let ((anon9_Then_correct  (=> (! (and %lbl%+12052 true) :lblpos +12052) (=> (ite (= ZF@7 #b0) false true) label_0x2ae7_correct))))
(let ((anon8_Then_correct  (=> (! (and %lbl%+12035 true) :lblpos +12035) (=> (ite (= (bvnot ZF@6) #b0) false true) (=> (and (and (= t_67@0 (bvand RDX RDX)) (= PF@7 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr t_67@0 #x0000000000000004) t_67@0) #x0000000000000002) (bvxor (bvlshr t_67@0 #x0000000000000004) t_67@0)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr t_67@0 #x0000000000000004) t_67@0) #x0000000000000002) (bvxor (bvlshr t_67@0 #x0000000000000004) t_67@0))))))) (and (= SF@7 ((_ extract 63 63) t_67@0)) (= ZF@7 (ite  (not (= #x0000000000000000 t_67@0)) #b0 #b1)))) (and anon9_Then_correct anon9_Else_correct))))))
(let ((anon8_Else_correct  (=> (! (and %lbl%+12036 true) :lblpos +12036) (=> (not (ite (= (bvnot ZF@6) #b0) false true)) label_0x2ae7_correct))))
(let ((label_0x2a70_correct  (=> (! (and %lbl%+12005 true) :lblpos +12005) (=> (and (and (and (and (and (and (= mem_stack@0 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack (bvadd RSP #x0000000000000008) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RBX)))) (bvadd (bvadd RSP #x0000000000000008) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RBX)))) (bvadd (bvadd RSP #x0000000000000008) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RBX)))) (bvadd (bvadd (bvadd RSP #x0000000000000008) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RBX)))) (bvadd (bvadd RSP #x0000000000000008) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RBX)))) (bvadd (bvadd (bvadd RSP #x0000000000000008) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RBX)))) (bvadd (bvadd (bvadd RSP #x0000000000000008) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RBX)))) (bvadd (bvadd (bvadd (bvadd RSP #x0000000000000008) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RBX))))) (= mem_stack@1 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@0 (bvadd RSP #x0000000000000010) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RBP)))) (bvadd (bvadd RSP #x0000000000000010) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RBP)))) (bvadd (bvadd RSP #x0000000000000010) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RBP)))) (bvadd (bvadd (bvadd RSP #x0000000000000010) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RBP)))) (bvadd (bvadd RSP #x0000000000000010) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RBP)))) (bvadd (bvadd (bvadd RSP #x0000000000000010) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RBP)))) (bvadd (bvadd (bvadd RSP #x0000000000000010) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RBP)))) (bvadd (bvadd (bvadd (bvadd RSP #x0000000000000010) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RBP)))))) (and (= mem_stack@2 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@1 (bvadd RSP #x0000000000000018) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RSI)))) (bvadd (bvadd RSP #x0000000000000018) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RSI)))) (bvadd (bvadd RSP #x0000000000000018) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RSI)))) (bvadd (bvadd (bvadd RSP #x0000000000000018) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RSI)))) (bvadd (bvadd RSP #x0000000000000018) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RSI)))) (bvadd (bvadd (bvadd RSP #x0000000000000018) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RSI)))) (bvadd (bvadd (bvadd RSP #x0000000000000018) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RSI)))) (bvadd (bvadd (bvadd (bvadd RSP #x0000000000000018) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RSI))))) (= RSP@0 (bvsub RSP #x0000000000000008)))) (and (and (= mem_stack@3 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@2 RSP@0 ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RDI)))) (bvadd RSP@0 #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RDI)))) (bvadd RSP@0 #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RDI)))) (bvadd (bvadd RSP@0 #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RDI)))) (bvadd RSP@0 #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RDI)))) (bvadd (bvadd RSP@0 #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RDI)))) (bvadd (bvadd RSP@0 #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RDI)))) (bvadd (bvadd (bvadd RSP@0 #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RDI))))) (= RSP@1 (bvsub RSP@0 #x0000000000000008))) (and (= mem_stack@4 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@3 RSP@1 ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) R14)))) (bvadd RSP@1 #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) R14)))) (bvadd RSP@1 #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) R14)))) (bvadd (bvadd RSP@1 #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) R14)))) (bvadd RSP@1 #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) R14)))) (bvadd (bvadd RSP@1 #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) R14)))) (bvadd (bvadd RSP@1 #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) R14)))) (bvadd (bvadd (bvadd RSP@1 #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) R14))))) (= RSP@2 (bvsub RSP@1 #x0000000000000008))))) (and (and (and (= mem_stack@5 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@4 RSP@2 ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) R15)))) (bvadd RSP@2 #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) R15)))) (bvadd RSP@2 #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) R15)))) (bvadd (bvadd RSP@2 #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) R15)))) (bvadd RSP@2 #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) R15)))) (bvadd (bvadd RSP@2 #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) R15)))) (bvadd (bvadd RSP@2 #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) R15)))) (bvadd (bvadd (bvadd RSP@2 #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) R15))))) (= RSP@3 (bvsub RSP@2 #x00000000000000d0))) (and (= CF@0 (ite  (not (bvult RSP@2 #x00000000000000d0)) #b0 #b1)) (= OF@0 ((_ extract 63 63) (bvand (bvxor RSP@2 #x00000000000000d0) (bvxor RSP@2 RSP@3)))))) (and (and (= AF@0 (ite  (not (= #x0000000000000010 (bvand #x0000000000000010 (bvxor (bvxor RSP@3 RSP@2) #x00000000000000d0)))) #b0 #b1)) (= PF@0 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RSP@3 #x0000000000000004) RSP@3) #x0000000000000002) (bvxor (bvlshr RSP@3 #x0000000000000004) RSP@3)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RSP@3 #x0000000000000004) RSP@3) #x0000000000000002) (bvxor (bvlshr RSP@3 #x0000000000000004) RSP@3))))))) (and (= SF@0 ((_ extract 63 63) RSP@3)) (= ZF@0 (ite  (not (= #x0000000000000000 RSP@3)) #b0 #b1)))))) (and (and (and (and (= RBX@0 (concat (concat (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd (bvadd (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) #x0000000000000001)) (|Select_[$bv64]$bv8| (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _stack_high)) mem_stack@5 (ite  (and (bvuge (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_low) (bvult (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000) _bitmap_high)) mem_bitmap mem@@0)) (bvadd (bvadd #x000000000000370e #x0000000000002a92) #x0000000000000000)))))) (= R10@0 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000030)))) (and (= origCOUNT_12@0 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001))) (= R10@1 (bvlshr R10@0 (bvand #x0000000000000006 (bvsub #x0000000000000040 #x0000000000000001)))))) (and (and (= CF@1 (ite (ite (= (ite  (not (= origCOUNT_12@0 #x0000000000000000)) #b0 #b1) #b0) false true) CF@0 ((_ extract 63 63) (bvshl R10@0 (bvsub #x0000000000000040 origCOUNT_12@0))))) (= OF@1 (ite (ite (= (ite  (not (= origCOUNT_12@0 #x0000000000000000)) #b0 #b1) #b0) false true) OF@0 (ite (ite (= (ite  (not (= origCOUNT_12@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) R10@0) unconstrained_1)))) (and (= SF@1 (ite (ite (= (ite  (not (= origCOUNT_12@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@0 ((_ extract 63 63) R10@1))) (= ZF@1 (ite (ite (= (ite  (not (= origCOUNT_12@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@0 (ite  (not (= #x0000000000000000 R10@1)) #b0 #b1)))))) (and (and (and (= PF@1 (ite (ite (= (ite  (not (= origCOUNT_12@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@0 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr R10@1 #x0000000000000004) R10@1) #x0000000000000002) (bvxor (bvlshr R10@1 #x0000000000000004) R10@1)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr R10@1 #x0000000000000004) R10@1) #x0000000000000002) (bvxor (bvlshr R10@1 #x0000000000000004) R10@1))))))) (= AF@1 (ite (ite (= (ite  (not (= origCOUNT_12@0 #x0000000000000000)) #b0 #b1) #b0) false true) AF@0 unconstrained_2))) (and (= R15@0 (concat #x00000000 #x00000000)) (= RCX@0 ((_ extract 63 0) (bvadd RSP@3 #x0000000000000030))))) (and (and (= origCOUNT_18@0 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001))) (= RCX@1 (bvlshr RCX@0 (bvand #x0000000000000003 (bvsub #x0000000000000040 #x0000000000000001))))) (and (= CF@2 (ite (ite (= (ite  (not (= origCOUNT_18@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b0 ((_ extract 63 63) (bvshl RCX@0 (bvsub #x0000000000000040 origCOUNT_18@0))))) (= OF@2 (ite (ite (= (ite  (not (= origCOUNT_18@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b0 (ite (ite (= (ite  (not (= origCOUNT_18@0 #x0000000000000001)) #b0 #b1) #b0) false true) ((_ extract 63 63) RCX@0) unconstrained_4)))))))) (and (and (and (and (and (= SF@2 (ite (ite (= (ite  (not (= origCOUNT_18@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b0 ((_ extract 63 63) RCX@1))) (= ZF@2 (ite (ite (= (ite  (not (= origCOUNT_18@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b1 (ite  (not (= #x0000000000000000 RCX@1)) #b0 #b1)))) (and (= PF@2 (ite (ite (= (ite  (not (= origCOUNT_18@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b1 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RCX@1 #x0000000000000004) RCX@1) #x0000000000000002) (bvxor (bvlshr RCX@1 #x0000000000000004) RCX@1)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RCX@1 #x0000000000000004) RCX@1) #x0000000000000002) (bvxor (bvlshr RCX@1 #x0000000000000004) RCX@1))))))) (= AF@2 (ite (ite (= (ite  (not (= origCOUNT_18@0 #x0000000000000000)) #b0 #b1) #b0) false true) unconstrained_3 unconstrained_5)))) (and (and (= RAX@0 (concat #x00000000 #x0000003f)) (= RCX@2 (concat #x00000000 (bvand ((_ extract 31 0) RCX@1) #x00000007)))) (and (= PF@3 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@2) #x00000004) ((_ extract 31 0) RCX@2)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@2) #x00000004) ((_ extract 31 0) RCX@2))) #x00000001) (bvxor (bvlshr (bvxor (bvlshr ((_ extract 31 0) RCX@2) #x00000004) ((_ extract 31 0) RCX@2)) #x00000002) (bvxor (bvlshr ((_ extract 31 0) RCX@2) #x00000004) ((_ extract 31 0) RCX@2))))))) (= SF@3 ((_ extract 31 31) ((_ extract 31 0) RCX@2)))))) (and (and (and (= ZF@3 (ite  (not (= #x00000000 ((_ extract 31 0) RCX@2))) #b0 #b1)) (= origCOUNT_26@0 (bvand RCX@2 (bvsub #x0000000000000040 #x0000000000000001)))) (and (= RAX@1 (bvshl RAX@0 (bvand RCX@2 (bvsub #x0000000000000040 #x0000000000000001)))) (= CF@3 (ite (ite (= (ite  (not (= origCOUNT_26@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b0 ((_ extract 0 0) (bvlshr RAX@0 (bvsub #x0000000000000040 origCOUNT_26@0))))))) (and (and (= OF@3 (ite (ite (= (ite  (not (= origCOUNT_26@0 #x0000000000000000)) #b0 #b1) #b0) false true) #b0 (ite (ite (= (ite  (not (= origCOUNT_26@0 #x0000000000000001)) #b0 #b1) #b0) false true) (bvxor ((_ extract 63 63) RAX@1) CF@3) unconstrained_7))) (= SF@4 (ite (ite (= (ite  (not (= origCOUNT_26@0 #x0000000000000000)) #b0 #b1) #b0) false true) SF@3 ((_ extract 63 63) RAX@1)))) (and (= ZF@4 (ite (ite (= (ite  (not (= origCOUNT_26@0 #x0000000000000000)) #b0 #b1) #b0) false true) ZF@3 (ite  (not (= #x0000000000000000 RAX@1)) #b0 #b1))) (= PF@4 (ite (ite (= (ite  (not (= origCOUNT_26@0 #x0000000000000000)) #b0 #b1) #b0) false true) PF@3 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr RAX@1 #x0000000000000004) RAX@1) #x0000000000000002) (bvxor (bvlshr RAX@1 #x0000000000000004) RAX@1)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr RAX@1 #x0000000000000004) RAX@1) #x0000000000000002) (bvxor (bvlshr RAX@1 #x0000000000000004) RAX@1))))))))))) (and (and (and (and (= AF@3 (ite (ite (= (ite  (not (= origCOUNT_26@0 #x0000000000000000)) #b0 #b1) #b0) false true) unconstrained_6 unconstrained_8)) (= mem_bitmap@0 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))) (bvadd (bvadd RBX@0 R10@1) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))) (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))) (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))) (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))) (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))) (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))) (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) (bvor (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap (bvadd RBX@0 R10@1))))) RAX@1))))))) (and (= PF@5 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))) #x0000000000000004) (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1)))))) #x0000000000000002) (bvxor (bvlshr (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))) #x0000000000000004) (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))))) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))) #x0000000000000004) (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1)))))) #x0000000000000002) (bvxor (bvlshr (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))) #x0000000000000004) (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))))))))) (= SF@5 ((_ extract 63 63) (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))))))) (and (and (= ZF@5 (ite  (not (= #x0000000000000000 (concat (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd (bvadd RBX@0 R10@1) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd (bvadd RBX@0 R10@1) #x0000000000000001)) (|Select_[$bv64]$bv8| mem_bitmap@0 (bvadd RBX@0 R10@1))))))) #b0 #b1)) (= RAX@2 (concat #x00000000 #x00000000))) (and (= mem_stack@6 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@5 (bvadd RSP@3 #x0000000000000030) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) R15@0)))) (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) R15@0)))) (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) R15@0)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) R15@0)))) (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) R15@0)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) R15@0)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) R15@0)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000030) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) R15@0))))) (= mem_stack@7 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@6 (bvadd RSP@3 #x0000000000000038) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000038) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RAX@2)))))))) (and (and (and (= mem_stack@8 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@7 (bvadd RSP@3 #x0000000000000040) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000040) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RAX@2))))) (= mem_stack@9 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@8 (bvadd RSP@3 #x0000000000000048) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000048) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RAX@2)))))) (and (= mem_stack@10 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@9 (bvadd RSP@3 #x0000000000000050) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000050) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000050) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000050) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000050) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000050) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000050) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000050) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RAX@2))))) (= mem_stack@11 (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| (|Store_[$bv64]$bv8| mem_stack@10 (bvadd RSP@3 #x0000000000000058) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000058) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000058) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000058) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 31 0) RAX@2)))) (bvadd (bvadd RSP@3 #x0000000000000058) #x0000000000000004) ((_ extract 7 0) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000058) #x0000000000000004) #x0000000000000001) ((_ extract 15 8) ((_ extract 15 0) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd RSP@3 #x0000000000000058) #x0000000000000004) #x0000000000000002) ((_ extract 7 0) ((_ extract 31 16) ((_ extract 63 32) RAX@2)))) (bvadd (bvadd (bvadd (bvadd RSP@3 #x0000000000000058) #x0000000000000004) #x0000000000000002) #x0000000000000001) ((_ extract 15 8) ((_ extract 31 16) ((_ extract 63 32) RAX@2))))))) (and (and (= t_33@0 (bvand R9 R9)) (= PF@6 (bvnot ((_ extract 0 0) (bvxor (bvlshr (bvxor (bvlshr (bvxor (bvlshr t_33@0 #x0000000000000004) t_33@0) #x0000000000000002) (bvxor (bvlshr t_33@0 #x0000000000000004) t_33@0)) #x0000000000000001) (bvxor (bvlshr (bvxor (bvlshr t_33@0 #x0000000000000004) t_33@0) #x0000000000000002) (bvxor (bvlshr t_33@0 #x0000000000000004) t_33@0))))))) (and (= SF@6 ((_ extract 63 63) t_33@0)) (= ZF@6 (ite  (not (= #x0000000000000000 t_33@0)) #b0 #b1)))))))) (and anon8_Then_correct anon8_Else_correct)))))
(let ((PreconditionGeneratedEntry_correct  (=> (! (and %lbl%+14718 true) :lblpos +14718) (=> (= (concat (concat (concat (|Select_[$bv64]$bv8| mem@@0 (bvadd (bvadd (bvadd _guard_writeTable_ptr #x0000000000000004) #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem@@0 (bvadd (bvadd _guard_writeTable_ptr #x0000000000000004) #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem@@0 (bvadd (bvadd _guard_writeTable_ptr #x0000000000000004) #x0000000000000001)) (|Select_[$bv64]$bv8| mem@@0 (bvadd _guard_writeTable_ptr #x0000000000000004)))) (concat (concat (|Select_[$bv64]$bv8| mem@@0 (bvadd (bvadd _guard_writeTable_ptr #x0000000000000002) #x0000000000000001)) (|Select_[$bv64]$bv8| mem@@0 (bvadd _guard_writeTable_ptr #x0000000000000002))) (concat (|Select_[$bv64]$bv8| mem@@0 (bvadd _guard_writeTable_ptr #x0000000000000001)) (|Select_[$bv64]$bv8| mem@@0 _guard_writeTable_ptr)))) _bitmap_low) (=> (and (and (and (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000008) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000008) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000008) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000008))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000010) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000010) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000010) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000010)))) (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000018) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000018) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000018) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000018))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000020) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000020) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000020) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000020))))) (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000028) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000028) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000028) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000028))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000030) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000030) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000030) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000030)))) (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000038) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000038) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000038) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000038))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000040) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000040) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000040) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000040)))))) (and (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000048) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000048) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000048) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000048))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000050) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000050) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000050) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000050)))) (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000058) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000058) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000058) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000058))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000060) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000060) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000060) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000060))))) (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000068) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000068) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000068) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000068))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000070) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000070) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000070) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000070)))) (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000078) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000078) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000078) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000078))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000080) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000080) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000080) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000080))))))) (and (and (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000088) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000088) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000088) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000088))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000090) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000090) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000090) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000090)))) (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x0000000000000098) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000098) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x0000000000000098) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x0000000000000098))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000a0) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000a0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000a0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000a0))))) (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000a8) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000a8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000a8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000a8))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000b0) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000b0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000b0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000b0)))) (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000b8) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000b8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000b8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000b8))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000c0) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000c0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000c0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000c0)))))) (and (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000c8) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000c8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000c8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000c8))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000d0) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000d0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000d0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000d0)))) (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000d8) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000d8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000d8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000d8))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000e0) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000e0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000e0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000e0))))) (and (and (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000e8) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000e8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000e8) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000e8))) (and (not (ite (= ((_ extract 0 0) (bvlshr (bvand (|Select_[$bv64]$bv8| mem_bitmap (bvadd (bvlshr (bvsub (bvsub RSP #x00000000000000f0) _virtual_address_space_low) #x0000000000000006) _bitmap_low)) (bvshl #x01 (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000f0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) (concat #b00000 ((_ extract 2 0) (bvlshr (bvand (bvsub (bvsub RSP #x00000000000000f0) _virtual_address_space_low) #x000000000000003f) #x0000000000000003))))) #b0) false true)) (T (bvsub RSP #x00000000000000f0)))) (and (and (bvuge RSP #x0000000020000128) (bvult RSP #x00000000200fffc0)) (= ((_ extract 2 0) RSP) #b000)))))) label_0x2a70_correct)))))
PreconditionGeneratedEntry_correct))))))))))))))))))))
))
(check-sat)
